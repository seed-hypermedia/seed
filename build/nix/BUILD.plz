filegroup(
    name = "srcs",
    srcs = glob(["**"]),
)

def nixpkgs_binary(
        name: str,
        entrypoint: str = "$PKG/nixpkgs.nix",
        nix_attribute: str = None,
        bin: str = None):
    """
    Exposes a binary from Nix to the build system.

    Args:
        name: name of the target.
        entrypoint: nixpkgs entrypoint.
        nix_attribute: nix attribute to build. Same as name if not specified.
        bin: name of the resulting binary to expose. Same as name if not specified.
    Returns:
        Build rule.
    """
    if not nix_attribute:
        nix_attribute = name
    if not bin:
        bin = name

    return build_rule(
        name = name,
        srcs = [":srcs"],
        outs = [name],
        binary = True,
    cmd = """
set -e
HOME=$(eval echo ~$(whoami))
if [ -x "$HOME/.nix-profile/bin/nix-build" ]; then
  NIX_BUILD="$HOME/.nix-profile/bin/nix-build"
elif command -v nix-build >/dev/null 2>&1; then
  NIX_BUILD="$(command -v nix-build)"
else
  NIX_BUILD=""
fi

if [ -n "$NIX_BUILD" ]; then
  STORE_PATH="$($NIX_BUILD --no-out-link $entrypoint -A $nix_attribute)"
else
  NIX_CLI=""
  if command -v nix >/dev/null 2>&1; then
    NIX_CLI="$(command -v nix)"
  elif [ -x "/nix/var/nix/profiles/default/bin/nix" ]; then
    NIX_CLI="/nix/var/nix/profiles/default/bin/nix"
  elif [ -x "/run/current-system/sw/bin/nix" ]; then
    NIX_CLI="/run/current-system/sw/bin/nix"
  fi
  if [ -z "$NIX_CLI" ]; then
    echo "Neither nix-build nor nix found in PATH" >&2
    exit 1
  fi
  STORE_PATH="$("$NIX_CLI" --extra-experimental-features nix-command --extra-experimental-features flakes build --impure --no-link --print-out-paths --file $entrypoint $nix_attribute)"
fi
cat > $OUT <<EOF
#!/bin/sh
exec $STORE_PATH/bin/$bin $(echo '$@')
EOF
""",
        env = {
            "nix_attribute": nix_attribute,
            "entrypoint": entrypoint,
            "bin": bin,
        },
        output_is_complete = True,
        visibility = ["PUBLIC"],
    )

nixpkgs_binary(
    name = "go",
)

nixpkgs_binary(
    name = "md5sum",
    nix_attribute = "coreutils",
)

nixpkgs_binary(
    name = "yarn",
)

nixpkgs_binary(
    name = "pnpm",
    nix_attribute = "pnpm",
)

nixpkgs_binary(
    name = "protoc",
    nix_attribute = "protobuf",
)
