name: Release Docker Images

on:
  workflow_dispatch:
  push:
    tags:
      - "*.*.*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  AWS_REGION: us-east-1

jobs:
  frontend-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: yarn install
      - name: Validate Code Formatting
        run: yarn format:check
      - name: Run tests
        run: yarn test
  backend-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.0"
      - run: go test --count 1 ./backend/...
      # Run tests again with the race-detector.
      # Using the same job to reuse the build cache.
      - run: go test --count 1 -race ./backend/...
  generate-docker-images:
    runs-on: ubuntu-latest
    needs: [frontend-tests, backend-tests]
    steps:
      - name: Force Install GIT latest
        run: |
          sudo apt-get install -y software-properties-common \
          && sudo apt-get update \
          && sudo add-apt-repository -y ppa:git-core/ppa \
          && sudo apt-get update \
          && sudo apt-get install -y git \
          && git --version

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get commit date for the triggering commit
        run: |
          COMMIT_DATE=$(git show -s --format="%cd" ${{ github.sha }})
          echo "COMMIT_DATE=$COMMIT_DATE" >> $GITHUB_ENV

      # Checkout the repository to the GitHub Actions runner
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Check release tag
        id: release-tag
        uses: actions-ecosystem/action-regex-match@v2
        with:
          text: ${{ github.ref }}
          regex: 'refs/tags/[0-9]{4}\.[0-9]+\.[0-9]+$'

      - name: DockerHub Release seedhypermedia/web:latest
        if: startsWith(github.ref, 'refs/tags/') && steps.release-tag.outputs.match
        uses: docker/build-push-action@v4
        with:
          push: true
          file: frontend/apps/web/Dockerfile
          tags: seedhypermedia/web:latest
          build-args: |
            SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
            SITE_SENTRY_DSN=${{ secrets.SITE_SENTRY_DSN }}
            COMMIT_HASH=${{ github.sha }}
            BRANCH=${{ github.ref }}
            DATE=${{ env.COMMIT_DATE }}

      - name: DockerHub Release seedhypermedia/site:latest
        if: startsWith(github.ref, 'refs/tags/') && steps.release-tag.outputs.match
        uses: docker/build-push-action@v4
        with:
          push: true
          build-args: |
            COMMIT_HASH=${{ github.sha }}
            BRANCH=${{ github.ref }}
            DATE=${{ env.COMMIT_DATE }}
          file: backend/cmd/seed-daemon/Dockerfile
          tags: seedhypermedia/site:latest

      - name: DockerHub Release seedhypermedia/monitord:latest
        if: startsWith(github.ref, 'refs/tags/') && steps.release-tag.outputs.match
        uses: docker/build-push-action@v4
        with:
          push: true
          file: backend/cmd/monitord/Dockerfile
          tags: seedhypermedia/monitord:latest

      - name: DockerHub Release seedhypermedia/relayd:latest
        if: startsWith(github.ref, 'refs/tags/') && steps.release-tag.outputs.match
        uses: docker/build-push-action@v4
        with:
          push: true
          file: backend/cmd/relayd/Dockerfile
          tags: seedhypermedia/relayd:latest
