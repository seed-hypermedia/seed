// @generated by protoc-gen-connect-es v1.1.3 with parameter "target=ts,import_extension=none"
// @generated from file payments/v1alpha/wallets.proto (package com.seed.payments.v1alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateWalletRequest, ExportWalletRequest, ExportWalletResponse, GetDefaultWalletRequest, GetWalletBalanceRequest, GetWalletBalanceResponse, ImportWalletRequest, ListWalletsRequest, ListWalletsResponse, RemoveWalletRequest, SetDefaultWalletRequest, UpdateWalletNameRequest, Wallet } from "./wallets_pb";
import { Empty, MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service com.seed.payments.v1alpha.Wallets
 */
export const Wallets = {
  typeName: "com.seed.payments.v1alpha.Wallets",
  methods: {
    /**
     * CreateWallet Created a seed wallet based on mnemonics.
     *
     * @generated from rpc com.seed.payments.v1alpha.Wallets.CreateWallet
     */
    createWallet: {
      name: "CreateWallet",
      I: CreateWalletRequest,
      O: Wallet,
      kind: MethodKind.Unary,
    },
    /**
     * RemoveWallet deletes a wallet locally. It can be later imported
     * with the necessary credentials and no funds will be lost.
     *
     * @generated from rpc com.seed.payments.v1alpha.Wallets.RemoveWallet
     */
    removeWallet: {
      name: "RemoveWallet",
      I: RemoveWalletRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
    /**
     * ImportWallet Imports a 3rd party (compatible) wallet with credentials.
     *
     * @generated from rpc com.seed.payments.v1alpha.Wallets.ImportWallet
     */
    importWallet: {
      name: "ImportWallet",
      I: ImportWalletRequest,
      O: Wallet,
      kind: MethodKind.Unary,
    },
    /**
     * ExportWallet Export the wallet credentials so they can be imported and
     * used with a 3rd party compatible app.
     *
     * @generated from rpc com.seed.payments.v1alpha.Wallets.ExportWallet
     */
    exportWallet: {
      name: "ExportWallet",
      I: ExportWalletRequest,
      O: ExportWalletResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListWallets lists all available wallets for the account.
     *
     * @generated from rpc com.seed.payments.v1alpha.Wallets.GetWalletBalance
     */
    getWalletBalance: {
      name: "GetWalletBalance",
      I: GetWalletBalanceRequest,
      O: GetWalletBalanceResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListWallets lists all available wallets for the account.
     *
     * @generated from rpc com.seed.payments.v1alpha.Wallets.ListWallets
     */
    listWallets: {
      name: "ListWallets",
      I: ListWalletsRequest,
      O: ListWalletsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateWalletName changes the name of the wallet. This does not have any
     * implications on payments. Name is just for user convenience. 
     *
     * @generated from rpc com.seed.payments.v1alpha.Wallets.UpdateWalletName
     */
    updateWalletName: {
      name: "UpdateWalletName",
      I: UpdateWalletNameRequest,
      O: Wallet,
      kind: MethodKind.Unary,
    },
    /**
     * GetDefaultWallet returns the default wallet where payments are going
     * to be collected at. Also, this wallet will be used to make payments.
     *
     * @generated from rpc com.seed.payments.v1alpha.Wallets.GetDefaultWallet
     */
    getDefaultWallet: {
      name: "GetDefaultWallet",
      I: GetDefaultWalletRequest,
      O: Wallet,
      kind: MethodKind.Unary,
    },
    /**
     * SetDefaultWallet changes the default wallet where payments are going 
     * to be collected at. Also, this wallet will be used to make payments.
     *
     * @generated from rpc com.seed.payments.v1alpha.Wallets.SetDefaultWallet
     */
    setDefaultWallet: {
      name: "SetDefaultWallet",
      I: SetDefaultWalletRequest,
      O: Wallet,
      kind: MethodKind.Unary,
    },
  }
} as const;

