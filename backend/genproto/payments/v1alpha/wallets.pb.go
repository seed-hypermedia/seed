// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.24.4
// source: payments/v1alpha/wallets.proto

package payments

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Representation of a wallet
type Wallet struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique wallet identificator. Automatically generated. Unique across accounts.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The account this wallet belongs to.
	Account string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	// Address of the LND node backing up this wallet. In case lndhub, this will be the
	// URL to connect via rest api. In case LND wallet, this will be the gRPC address.
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	// The name of the wallet.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// The type of the wallet.
	Type          string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Wallet) Reset() {
	*x = Wallet{}
	mi := &file_payments_v1alpha_wallets_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Wallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wallet) ProtoMessage() {}

func (x *Wallet) ProtoReflect() protoreflect.Message {
	mi := &file_payments_v1alpha_wallets_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wallet.ProtoReflect.Descriptor instead.
func (*Wallet) Descriptor() ([]byte, []int) {
	return file_payments_v1alpha_wallets_proto_rawDescGZIP(), []int{0}
}

func (x *Wallet) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Wallet) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *Wallet) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Wallet) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Wallet) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// The request to create a wallet.
type CreateWalletRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The account we are creating the wallet to.
	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// Required. Name of the wallet to be created.
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWalletRequest) Reset() {
	*x = CreateWalletRequest{}
	mi := &file_payments_v1alpha_wallets_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWalletRequest) ProtoMessage() {}

func (x *CreateWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payments_v1alpha_wallets_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWalletRequest.ProtoReflect.Descriptor instead.
func (*CreateWalletRequest) Descriptor() ([]byte, []int) {
	return file_payments_v1alpha_wallets_proto_rawDescGZIP(), []int{1}
}

func (x *CreateWalletRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *CreateWalletRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// The request to import a wallet.
type ImportWalletRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The credentials to insert the new wallet in the format of
	// <wallet_type>://<alphanumeric_login>:<alphanumeric_password>@https://<domain>
	CredentialsUrl string `protobuf:"bytes,1,opt,name=credentials_url,json=credentialsUrl,proto3" json:"credentials_url,omitempty"`
	// Required. Account where this wallet will belong to.
	Account string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	// Required. The wallet name to be displayed.
	Name          string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportWalletRequest) Reset() {
	*x = ImportWalletRequest{}
	mi := &file_payments_v1alpha_wallets_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportWalletRequest) ProtoMessage() {}

func (x *ImportWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payments_v1alpha_wallets_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportWalletRequest.ProtoReflect.Descriptor instead.
func (*ImportWalletRequest) Descriptor() ([]byte, []int) {
	return file_payments_v1alpha_wallets_proto_rawDescGZIP(), []int{2}
}

func (x *ImportWalletRequest) GetCredentialsUrl() string {
	if x != nil {
		return x.CredentialsUrl
	}
	return ""
}

func (x *ImportWalletRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *ImportWalletRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Exported credentials.
type ExportWalletResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The credentials url to be used with a compatible 3rd party app.
	Credentials   string `protobuf:"bytes,1,opt,name=credentials,proto3" json:"credentials,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportWalletResponse) Reset() {
	*x = ExportWalletResponse{}
	mi := &file_payments_v1alpha_wallets_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportWalletResponse) ProtoMessage() {}

func (x *ExportWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payments_v1alpha_wallets_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportWalletResponse.ProtoReflect.Descriptor instead.
func (*ExportWalletResponse) Descriptor() ([]byte, []int) {
	return file_payments_v1alpha_wallets_proto_rawDescGZIP(), []int{3}
}

func (x *ExportWalletResponse) GetCredentials() string {
	if x != nil {
		return x.Credentials
	}
	return ""
}

// The request to get an lndhub wallet.
type WalletRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. Id of the wallet to operate with
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WalletRequest) Reset() {
	*x = WalletRequest{}
	mi := &file_payments_v1alpha_wallets_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletRequest) ProtoMessage() {}

func (x *WalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payments_v1alpha_wallets_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletRequest.ProtoReflect.Descriptor instead.
func (*WalletRequest) Descriptor() ([]byte, []int) {
	return file_payments_v1alpha_wallets_proto_rawDescGZIP(), []int{4}
}

func (x *WalletRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// The wallet's balance in satohis.
type GetWalletBalanceResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The wallet's balance in satohis.
	Balance       uint64 `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWalletBalanceResponse) Reset() {
	*x = GetWalletBalanceResponse{}
	mi := &file_payments_v1alpha_wallets_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletBalanceResponse) ProtoMessage() {}

func (x *GetWalletBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payments_v1alpha_wallets_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetWalletBalanceResponse) Descriptor() ([]byte, []int) {
	return file_payments_v1alpha_wallets_proto_rawDescGZIP(), []int{5}
}

func (x *GetWalletBalanceResponse) GetBalance() uint64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

// The request to list all wallets under a certain account.
type ListWalletsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. Account to list wallets from.
	Account       string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWalletsRequest) Reset() {
	*x = ListWalletsRequest{}
	mi := &file_payments_v1alpha_wallets_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWalletsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWalletsRequest) ProtoMessage() {}

func (x *ListWalletsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payments_v1alpha_wallets_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWalletsRequest.ProtoReflect.Descriptor instead.
func (*ListWalletsRequest) Descriptor() ([]byte, []int) {
	return file_payments_v1alpha_wallets_proto_rawDescGZIP(), []int{6}
}

func (x *ListWalletsRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

// All the wallets under a certain account.
type ListWalletsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Wallets under the account.
	Wallets       []*Wallet `protobuf:"bytes,1,rep,name=wallets,proto3" json:"wallets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListWalletsResponse) Reset() {
	*x = ListWalletsResponse{}
	mi := &file_payments_v1alpha_wallets_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWalletsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWalletsResponse) ProtoMessage() {}

func (x *ListWalletsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payments_v1alpha_wallets_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWalletsResponse.ProtoReflect.Descriptor instead.
func (*ListWalletsResponse) Descriptor() ([]byte, []int) {
	return file_payments_v1alpha_wallets_proto_rawDescGZIP(), []int{7}
}

func (x *ListWalletsResponse) GetWallets() []*Wallet {
	if x != nil {
		return x.Wallets
	}
	return nil
}

// The request to update a wallet
type UpdateWalletNameRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The wallet id to be modified.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Required. The new wallet's name.
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWalletNameRequest) Reset() {
	*x = UpdateWalletNameRequest{}
	mi := &file_payments_v1alpha_wallets_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWalletNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWalletNameRequest) ProtoMessage() {}

func (x *UpdateWalletNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payments_v1alpha_wallets_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWalletNameRequest.ProtoReflect.Descriptor instead.
func (*UpdateWalletNameRequest) Descriptor() ([]byte, []int) {
	return file_payments_v1alpha_wallets_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateWalletNameRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateWalletNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Gets the account's default wallet.
type GetDefaultWalletRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Account       string                 `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDefaultWalletRequest) Reset() {
	*x = GetDefaultWalletRequest{}
	mi := &file_payments_v1alpha_wallets_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDefaultWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDefaultWalletRequest) ProtoMessage() {}

func (x *GetDefaultWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payments_v1alpha_wallets_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDefaultWalletRequest.ProtoReflect.Descriptor instead.
func (*GetDefaultWalletRequest) Descriptor() ([]byte, []int) {
	return file_payments_v1alpha_wallets_proto_rawDescGZIP(), []int{9}
}

func (x *GetDefaultWalletRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

// Sets the default wallet used for payments.
type SetDefaultWalletRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The wallet id to set as default.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Required. The account the provided wallet is going to
	// be the default.
	Account       string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetDefaultWalletRequest) Reset() {
	*x = SetDefaultWalletRequest{}
	mi := &file_payments_v1alpha_wallets_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetDefaultWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDefaultWalletRequest) ProtoMessage() {}

func (x *SetDefaultWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payments_v1alpha_wallets_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDefaultWalletRequest.ProtoReflect.Descriptor instead.
func (*SetDefaultWalletRequest) Descriptor() ([]byte, []int) {
	return file_payments_v1alpha_wallets_proto_rawDescGZIP(), []int{10}
}

func (x *SetDefaultWalletRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SetDefaultWalletRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

var File_payments_v1alpha_wallets_proto protoreflect.FileDescriptor

const file_payments_v1alpha_wallets_proto_rawDesc = "" +
	"\n" +
	"\x1epayments/v1alpha/wallets.proto\x12\x19com.seed.payments.v1alpha\x1a\x1bgoogle/protobuf/empty.proto\"t\n" +
	"\x06Wallet\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\aaccount\x18\x02 \x01(\tR\aaccount\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x05 \x01(\tR\x04type\"C\n" +
	"\x13CreateWalletRequest\x12\x18\n" +
	"\aaccount\x18\x01 \x01(\tR\aaccount\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"l\n" +
	"\x13ImportWalletRequest\x12'\n" +
	"\x0fcredentials_url\x18\x01 \x01(\tR\x0ecredentialsUrl\x12\x18\n" +
	"\aaccount\x18\x02 \x01(\tR\aaccount\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\"8\n" +
	"\x14ExportWalletResponse\x12 \n" +
	"\vcredentials\x18\x01 \x01(\tR\vcredentials\"\x1f\n" +
	"\rWalletRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"4\n" +
	"\x18GetWalletBalanceResponse\x12\x18\n" +
	"\abalance\x18\x01 \x01(\x04R\abalance\".\n" +
	"\x12ListWalletsRequest\x12\x18\n" +
	"\aaccount\x18\x01 \x01(\tR\aaccount\"R\n" +
	"\x13ListWalletsResponse\x12;\n" +
	"\awallets\x18\x01 \x03(\v2!.com.seed.payments.v1alpha.WalletR\awallets\"=\n" +
	"\x17UpdateWalletNameRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"3\n" +
	"\x17GetDefaultWalletRequest\x12\x18\n" +
	"\aaccount\x18\x01 \x01(\tR\aaccount\"C\n" +
	"\x17SetDefaultWalletRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\aaccount\x18\x02 \x01(\tR\aaccount2\x88\b\n" +
	"\aWallets\x12a\n" +
	"\fCreateWallet\x12..com.seed.payments.v1alpha.CreateWalletRequest\x1a!.com.seed.payments.v1alpha.Wallet\x12P\n" +
	"\fRemoveWallet\x12(.com.seed.payments.v1alpha.WalletRequest\x1a\x16.google.protobuf.Empty\x12a\n" +
	"\fImportWallet\x12..com.seed.payments.v1alpha.ImportWalletRequest\x1a!.com.seed.payments.v1alpha.Wallet\x12i\n" +
	"\fExportWallet\x12(.com.seed.payments.v1alpha.WalletRequest\x1a/.com.seed.payments.v1alpha.ExportWalletResponse\x12q\n" +
	"\x10GetWalletBalance\x12(.com.seed.payments.v1alpha.WalletRequest\x1a3.com.seed.payments.v1alpha.GetWalletBalanceResponse\x12l\n" +
	"\vListWallets\x12-.com.seed.payments.v1alpha.ListWalletsRequest\x1a..com.seed.payments.v1alpha.ListWalletsResponse\x12X\n" +
	"\tGetWallet\x12(.com.seed.payments.v1alpha.WalletRequest\x1a!.com.seed.payments.v1alpha.Wallet\x12i\n" +
	"\x10UpdateWalletName\x122.com.seed.payments.v1alpha.UpdateWalletNameRequest\x1a!.com.seed.payments.v1alpha.Wallet\x12i\n" +
	"\x10GetDefaultWallet\x122.com.seed.payments.v1alpha.GetDefaultWalletRequest\x1a!.com.seed.payments.v1alpha.Wallet\x12i\n" +
	"\x10SetDefaultWallet\x122.com.seed.payments.v1alpha.SetDefaultWalletRequest\x1a!.com.seed.payments.v1alpha.WalletB1Z/seed/backend/genproto/payments/v1alpha;paymentsb\x06proto3"

var (
	file_payments_v1alpha_wallets_proto_rawDescOnce sync.Once
	file_payments_v1alpha_wallets_proto_rawDescData []byte
)

func file_payments_v1alpha_wallets_proto_rawDescGZIP() []byte {
	file_payments_v1alpha_wallets_proto_rawDescOnce.Do(func() {
		file_payments_v1alpha_wallets_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_payments_v1alpha_wallets_proto_rawDesc), len(file_payments_v1alpha_wallets_proto_rawDesc)))
	})
	return file_payments_v1alpha_wallets_proto_rawDescData
}

var file_payments_v1alpha_wallets_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_payments_v1alpha_wallets_proto_goTypes = []any{
	(*Wallet)(nil),                   // 0: com.seed.payments.v1alpha.Wallet
	(*CreateWalletRequest)(nil),      // 1: com.seed.payments.v1alpha.CreateWalletRequest
	(*ImportWalletRequest)(nil),      // 2: com.seed.payments.v1alpha.ImportWalletRequest
	(*ExportWalletResponse)(nil),     // 3: com.seed.payments.v1alpha.ExportWalletResponse
	(*WalletRequest)(nil),            // 4: com.seed.payments.v1alpha.WalletRequest
	(*GetWalletBalanceResponse)(nil), // 5: com.seed.payments.v1alpha.GetWalletBalanceResponse
	(*ListWalletsRequest)(nil),       // 6: com.seed.payments.v1alpha.ListWalletsRequest
	(*ListWalletsResponse)(nil),      // 7: com.seed.payments.v1alpha.ListWalletsResponse
	(*UpdateWalletNameRequest)(nil),  // 8: com.seed.payments.v1alpha.UpdateWalletNameRequest
	(*GetDefaultWalletRequest)(nil),  // 9: com.seed.payments.v1alpha.GetDefaultWalletRequest
	(*SetDefaultWalletRequest)(nil),  // 10: com.seed.payments.v1alpha.SetDefaultWalletRequest
	(*emptypb.Empty)(nil),            // 11: google.protobuf.Empty
}
var file_payments_v1alpha_wallets_proto_depIdxs = []int32{
	0,  // 0: com.seed.payments.v1alpha.ListWalletsResponse.wallets:type_name -> com.seed.payments.v1alpha.Wallet
	1,  // 1: com.seed.payments.v1alpha.Wallets.CreateWallet:input_type -> com.seed.payments.v1alpha.CreateWalletRequest
	4,  // 2: com.seed.payments.v1alpha.Wallets.RemoveWallet:input_type -> com.seed.payments.v1alpha.WalletRequest
	2,  // 3: com.seed.payments.v1alpha.Wallets.ImportWallet:input_type -> com.seed.payments.v1alpha.ImportWalletRequest
	4,  // 4: com.seed.payments.v1alpha.Wallets.ExportWallet:input_type -> com.seed.payments.v1alpha.WalletRequest
	4,  // 5: com.seed.payments.v1alpha.Wallets.GetWalletBalance:input_type -> com.seed.payments.v1alpha.WalletRequest
	6,  // 6: com.seed.payments.v1alpha.Wallets.ListWallets:input_type -> com.seed.payments.v1alpha.ListWalletsRequest
	4,  // 7: com.seed.payments.v1alpha.Wallets.GetWallet:input_type -> com.seed.payments.v1alpha.WalletRequest
	8,  // 8: com.seed.payments.v1alpha.Wallets.UpdateWalletName:input_type -> com.seed.payments.v1alpha.UpdateWalletNameRequest
	9,  // 9: com.seed.payments.v1alpha.Wallets.GetDefaultWallet:input_type -> com.seed.payments.v1alpha.GetDefaultWalletRequest
	10, // 10: com.seed.payments.v1alpha.Wallets.SetDefaultWallet:input_type -> com.seed.payments.v1alpha.SetDefaultWalletRequest
	0,  // 11: com.seed.payments.v1alpha.Wallets.CreateWallet:output_type -> com.seed.payments.v1alpha.Wallet
	11, // 12: com.seed.payments.v1alpha.Wallets.RemoveWallet:output_type -> google.protobuf.Empty
	0,  // 13: com.seed.payments.v1alpha.Wallets.ImportWallet:output_type -> com.seed.payments.v1alpha.Wallet
	3,  // 14: com.seed.payments.v1alpha.Wallets.ExportWallet:output_type -> com.seed.payments.v1alpha.ExportWalletResponse
	5,  // 15: com.seed.payments.v1alpha.Wallets.GetWalletBalance:output_type -> com.seed.payments.v1alpha.GetWalletBalanceResponse
	7,  // 16: com.seed.payments.v1alpha.Wallets.ListWallets:output_type -> com.seed.payments.v1alpha.ListWalletsResponse
	0,  // 17: com.seed.payments.v1alpha.Wallets.GetWallet:output_type -> com.seed.payments.v1alpha.Wallet
	0,  // 18: com.seed.payments.v1alpha.Wallets.UpdateWalletName:output_type -> com.seed.payments.v1alpha.Wallet
	0,  // 19: com.seed.payments.v1alpha.Wallets.GetDefaultWallet:output_type -> com.seed.payments.v1alpha.Wallet
	0,  // 20: com.seed.payments.v1alpha.Wallets.SetDefaultWallet:output_type -> com.seed.payments.v1alpha.Wallet
	11, // [11:21] is the sub-list for method output_type
	1,  // [1:11] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_payments_v1alpha_wallets_proto_init() }
func file_payments_v1alpha_wallets_proto_init() {
	if File_payments_v1alpha_wallets_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_payments_v1alpha_wallets_proto_rawDesc), len(file_payments_v1alpha_wallets_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_payments_v1alpha_wallets_proto_goTypes,
		DependencyIndexes: file_payments_v1alpha_wallets_proto_depIdxs,
		MessageInfos:      file_payments_v1alpha_wallets_proto_msgTypes,
	}.Build()
	File_payments_v1alpha_wallets_proto = out.File
	file_payments_v1alpha_wallets_proto_goTypes = nil
	file_payments_v1alpha_wallets_proto_depIdxs = nil
}
