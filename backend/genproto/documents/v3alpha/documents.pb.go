// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.24.4
// source: documents/v3alpha/documents.proto

package documents

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Attrbites that can be used for sorting.
type SortAttribute int32

const (
	// Sorting by activity time,
	// i.e. time of the latest comment or change.
	SortAttribute_ACTIVITY_TIME SortAttribute = 0
	// Sorting by name/title of the document.
	SortAttribute_NAME SortAttribute = 1
	// Sorting by path value.
	// When documents from multiple accounts are returned in the same listing,
	// the entire fully-qualified namespaced path is considered,
	// i.e. <account-id>/<path>.
	SortAttribute_PATH SortAttribute = 2
)

// Enum value maps for SortAttribute.
var (
	SortAttribute_name = map[int32]string{
		0: "ACTIVITY_TIME",
		1: "NAME",
		2: "PATH",
	}
	SortAttribute_value = map[string]int32{
		"ACTIVITY_TIME": 0,
		"NAME":          1,
		"PATH":          2,
	}
)

func (x SortAttribute) Enum() *SortAttribute {
	p := new(SortAttribute)
	*p = x
	return p
}

func (x SortAttribute) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortAttribute) Descriptor() protoreflect.EnumDescriptor {
	return file_documents_v3alpha_documents_proto_enumTypes[0].Descriptor()
}

func (SortAttribute) Type() protoreflect.EnumType {
	return &file_documents_v3alpha_documents_proto_enumTypes[0]
}

func (x SortAttribute) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortAttribute.Descriptor instead.
func (SortAttribute) EnumDescriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{0}
}

// Request for getting a single document.
type GetDocumentRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The ID of the account where the document is located.
	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// Required. Path of the document.
	// Empty string means root document.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// Optional. Exact version of the document to retrieve.
	// Empty version means "latest".
	Version       string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDocumentRequest) Reset() {
	*x = GetDocumentRequest{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocumentRequest) ProtoMessage() {}

func (x *GetDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocumentRequest.ProtoReflect.Descriptor instead.
func (*GetDocumentRequest) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{0}
}

func (x *GetDocumentRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *GetDocumentRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GetDocumentRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// When GetDocument RPC fails due to an existing redirect, this message will be attached
// to the built-in status message's details field. The client should handle the error,
// and parse this message to follow the redirect.
// The client must be careful to prevent redirect cycles and very deep redirect chains.
type RedirectErrorDetails struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Account ID where the redirect points to.
	TargetAccount string `protobuf:"bytes,1,opt,name=target_account,json=targetAccount,proto3" json:"target_account,omitempty"`
	// Path of the target document within the target account.
	TargetPath    string `protobuf:"bytes,2,opt,name=target_path,json=targetPath,proto3" json:"target_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RedirectErrorDetails) Reset() {
	*x = RedirectErrorDetails{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RedirectErrorDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedirectErrorDetails) ProtoMessage() {}

func (x *RedirectErrorDetails) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedirectErrorDetails.ProtoReflect.Descriptor instead.
func (*RedirectErrorDetails) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{1}
}

func (x *RedirectErrorDetails) GetTargetAccount() string {
	if x != nil {
		return x.TargetAccount
	}
	return ""
}

func (x *RedirectErrorDetails) GetTargetPath() string {
	if x != nil {
		return x.TargetPath
	}
	return ""
}

// Request to create a new document change.
type CreateDocumentChangeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The ID of the account where the document is located.
	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// Required. Path of the document to create change for.
	// If document doesn't exist it will be created.
	// Empty string means root document.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// Required. Version of the document to apply changes to.
	// Can be empty when creating a new document.
	BaseVersion string `protobuf:"bytes,3,opt,name=base_version,json=baseVersion,proto3" json:"base_version,omitempty"`
	// Required. Changes to be applied to the document.
	Changes []*DocumentChange `protobuf:"bytes,4,rep,name=changes,proto3" json:"changes,omitempty"`
	// Required. Name of the key to use for signing.
	// Use the Daemon API to list and manage keys.
	SigningKeyName string `protobuf:"bytes,5,opt,name=signing_key_name,json=signingKeyName,proto3" json:"signing_key_name,omitempty"`
	// Optional. ID of the capability that allows signing key to write on behalf of the account
	// for this particular path.
	Capability string `protobuf:"bytes,6,opt,name=capability,proto3" json:"capability,omitempty"`
	// Optional. Timestamp that the change should have.
	// By default current time is used.
	// The timestamp must be strictly greater than the timestamp of any other Change in the dependency chain.
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDocumentChangeRequest) Reset() {
	*x = CreateDocumentChangeRequest{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDocumentChangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDocumentChangeRequest) ProtoMessage() {}

func (x *CreateDocumentChangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDocumentChangeRequest.ProtoReflect.Descriptor instead.
func (*CreateDocumentChangeRequest) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{2}
}

func (x *CreateDocumentChangeRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *CreateDocumentChangeRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CreateDocumentChangeRequest) GetBaseVersion() string {
	if x != nil {
		return x.BaseVersion
	}
	return ""
}

func (x *CreateDocumentChangeRequest) GetChanges() []*DocumentChange {
	if x != nil {
		return x.Changes
	}
	return nil
}

func (x *CreateDocumentChangeRequest) GetSigningKeyName() string {
	if x != nil {
		return x.SigningKeyName
	}
	return ""
}

func (x *CreateDocumentChangeRequest) GetCapability() string {
	if x != nil {
		return x.Capability
	}
	return ""
}

func (x *CreateDocumentChangeRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type DeleteDocumentRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. ID of the account to delete the document from.
	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// Required. Path of the document to delete.
	Path          string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDocumentRequest) Reset() {
	*x = DeleteDocumentRequest{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDocumentRequest) ProtoMessage() {}

func (x *DeleteDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDocumentRequest.ProtoReflect.Descriptor instead.
func (*DeleteDocumentRequest) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteDocumentRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *DeleteDocumentRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// Request for listing root documents.
type ListRootDocumentsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. Number of results per page. Default is defined by the server.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional. Value from next_page_token obtained from a previous response.
	PageToken     string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRootDocumentsRequest) Reset() {
	*x = ListRootDocumentsRequest{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRootDocumentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRootDocumentsRequest) ProtoMessage() {}

func (x *ListRootDocumentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRootDocumentsRequest.ProtoReflect.Descriptor instead.
func (*ListRootDocumentsRequest) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{4}
}

func (x *ListRootDocumentsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRootDocumentsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// Response for listing root documents.
type ListRootDocumentsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of root documents.
	Documents []*DocumentInfo `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty"`
	// Token for the next page if there're more results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRootDocumentsResponse) Reset() {
	*x = ListRootDocumentsResponse{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRootDocumentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRootDocumentsResponse) ProtoMessage() {}

func (x *ListRootDocumentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRootDocumentsResponse.ProtoReflect.Descriptor instead.
func (*ListRootDocumentsResponse) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{5}
}

func (x *ListRootDocumentsResponse) GetDocuments() []*DocumentInfo {
	if x != nil {
		return x.Documents
	}
	return nil
}

func (x *ListRootDocumentsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// Request to list accounts.
type ListAccountsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. Number of results to return per page.
	// If not set, the server will pick some default number.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional. Token of the page to request, obtained from
	// a previous response.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Optional. If set to true, only accounts that the user is subscribed to will be returned.
	// If at least one document in the account has a subscription, then the account is considered subscribed.
	SubscribedOnly bool `protobuf:"varint,3,opt,name=subscribed_only,json=subscribedOnly,proto3" json:"subscribed_only,omitempty"`
	// Optional. Configuration for sorting the response.
	// If not specified, the default sorting is by activity time in descending order.
	SortOptions   *SortOptions `protobuf:"bytes,4,opt,name=sort_options,json=sortOptions,proto3" json:"sort_options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAccountsRequest) Reset() {
	*x = ListAccountsRequest{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountsRequest) ProtoMessage() {}

func (x *ListAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountsRequest.ProtoReflect.Descriptor instead.
func (*ListAccountsRequest) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{6}
}

func (x *ListAccountsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListAccountsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListAccountsRequest) GetSubscribedOnly() bool {
	if x != nil {
		return x.SubscribedOnly
	}
	return false
}

func (x *ListAccountsRequest) GetSortOptions() *SortOptions {
	if x != nil {
		return x.SortOptions
	}
	return nil
}

// Response to list accounts.
type ListAccountsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of accounts.
	Accounts []*Account `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	// Token for the next page if there're more results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAccountsResponse) Reset() {
	*x = ListAccountsResponse{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountsResponse) ProtoMessage() {}

func (x *ListAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountsResponse.ProtoReflect.Descriptor instead.
func (*ListAccountsResponse) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{7}
}

func (x *ListAccountsResponse) GetAccounts() []*Account {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *ListAccountsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// Request to get a single account by ID.
type GetAccountRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. ID of the account to retrieve.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAccountRequest) Reset() {
	*x = GetAccountRequest{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountRequest) ProtoMessage() {}

func (x *GetAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountRequest.ProtoReflect.Descriptor instead.
func (*GetAccountRequest) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{8}
}

func (x *GetAccountRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Request to get multiple accounts by IDs.
type BatchGetAccountsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. List of account IDs to retrieve.
	Ids           []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetAccountsRequest) Reset() {
	*x = BatchGetAccountsRequest{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetAccountsRequest) ProtoMessage() {}

func (x *BatchGetAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetAccountsRequest.ProtoReflect.Descriptor instead.
func (*BatchGetAccountsRequest) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{9}
}

func (x *BatchGetAccountsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

// Response to get multiple accounts by IDs.
type BatchGetAccountsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Accounts that were successfully retrieved,
	// keyed by account ID.
	Accounts map[string]*Account `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Errors (if any) that occurred while retrieving accounts,
	// keyed by account ID.
	// The value of the map is a serialized gRPC Status message.
	// It's not used as a concrete type here because it's exposed in a very accessible way,
	// but every gRPC client library has a defined type for the Status message.
	// See https://github.com/googleapis/googleapis/blob/master/google/rpc/status.proto,
	// and https://grpc.io/docs/guides/status-codes.
	Errors        map[string][]byte `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetAccountsResponse) Reset() {
	*x = BatchGetAccountsResponse{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetAccountsResponse) ProtoMessage() {}

func (x *BatchGetAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetAccountsResponse.ProtoReflect.Descriptor instead.
func (*BatchGetAccountsResponse) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{10}
}

func (x *BatchGetAccountsResponse) GetAccounts() map[string]*Account {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *BatchGetAccountsResponse) GetErrors() map[string][]byte {
	if x != nil {
		return x.Errors
	}
	return nil
}

// Request to update a profile.
type UpdateProfileRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. ID of the account to update the profile for.
	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// Required. The updated profile data.
	Profile *Profile `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"`
	// Required. Name of the key to use for signing the profile.
	SigningKeyName string `protobuf:"bytes,3,opt,name=signing_key_name,json=signingKeyName,proto3" json:"signing_key_name,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateProfileRequest) Reset() {
	*x = UpdateProfileRequest{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProfileRequest) ProtoMessage() {}

func (x *UpdateProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProfileRequest.ProtoReflect.Descriptor instead.
func (*UpdateProfileRequest) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateProfileRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UpdateProfileRequest) GetProfile() *Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *UpdateProfileRequest) GetSigningKeyName() string {
	if x != nil {
		return x.SigningKeyName
	}
	return ""
}

// Aggregated information about an account.
// Some of this information comes from the accounts' root document,
// some is aggregated from the other documents inside of the account.
type Account struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the account.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata attributes from the root document of this account's Space.
	Metadata *structpb.Struct `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Summary of the activity in the entire account.
	ActivitySummary *ActivitySummary `protobuf:"bytes,3,opt,name=activity_summary,json=activitySummary,proto3" json:"activity_summary,omitempty"`
	// Whether the user is subscribed to this account.
	// If at least one document in the account has a subscription, then the account is considered subscribed.
	IsSubscribed bool `protobuf:"varint,4,opt,name=is_subscribed,json=isSubscribed,proto3" json:"is_subscribed,omitempty"`
	// Optional. ID of another Account this account claims to act on behalf of.
	// If this is present all the other fields should be ignored.
	// It's up to the caller to follow the alias and get the actual account data.
	AliasAccount string `protobuf:"bytes,5,opt,name=alias_account,json=aliasAccount,proto3" json:"alias_account,omitempty"`
	// Optional. Profile information about the account.
	// Can be missing if there's no Profile blob for this account.
	Profile       *Profile `protobuf:"bytes,6,opt,name=profile,proto3" json:"profile,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Account) Reset() {
	*x = Account{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{12}
}

func (x *Account) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Account) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Account) GetActivitySummary() *ActivitySummary {
	if x != nil {
		return x.ActivitySummary
	}
	return nil
}

func (x *Account) GetIsSubscribed() bool {
	if x != nil {
		return x.IsSubscribed
	}
	return false
}

func (x *Account) GetAliasAccount() string {
	if x != nil {
		return x.AliasAccount
	}
	return ""
}

func (x *Account) GetProfile() *Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

// Profile describes properties of an account.
type Profile struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Display name of the account.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// URI for the icon/avatar.
	Icon string `protobuf:"bytes,2,opt,name=icon,proto3" json:"icon,omitempty"`
	// Optional short description text.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Output only. Time when the profile was updated.
	// This field is set by the server, and is ignored in update requests from the client.
	UpdateTime    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Profile) Reset() {
	*x = Profile{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile) ProtoMessage() {}

func (x *Profile) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile.ProtoReflect.Descriptor instead.
func (*Profile) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{13}
}

func (x *Profile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Profile) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Profile) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Profile) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

// Request to create an alias for a key.
// There must be an agent capability granted to the signer of the alias.
type CreateAliasRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. Key to use for signing the alias.
	SigningKeyName string `protobuf:"bytes,1,opt,name=signing_key_name,json=signingKeyName,proto3" json:"signing_key_name,omitempty"`
	// Required. ID of the target (alias) account.
	AliasAccount  string `protobuf:"bytes,2,opt,name=alias_account,json=aliasAccount,proto3" json:"alias_account,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateAliasRequest) Reset() {
	*x = CreateAliasRequest{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAliasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAliasRequest) ProtoMessage() {}

func (x *CreateAliasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAliasRequest.ProtoReflect.Descriptor instead.
func (*CreateAliasRequest) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{14}
}

func (x *CreateAliasRequest) GetSigningKeyName() string {
	if x != nil {
		return x.SigningKeyName
	}
	return ""
}

func (x *CreateAliasRequest) GetAliasAccount() string {
	if x != nil {
		return x.AliasAccount
	}
	return ""
}

// Request to create a contact.
type CreateContactRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. ID of the account to create the contact for.
	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// Required. Name of the key to use for signing.
	SigningKeyName string `protobuf:"bytes,2,opt,name=signing_key_name,json=signingKeyName,proto3" json:"signing_key_name,omitempty"`
	// Required. Account ID about which we are issuing the contact record.
	Subject string `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`
	// Required. Name that we know the subject by.
	Name          string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateContactRequest) Reset() {
	*x = CreateContactRequest{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateContactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContactRequest) ProtoMessage() {}

func (x *CreateContactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContactRequest.ProtoReflect.Descriptor instead.
func (*CreateContactRequest) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{15}
}

func (x *CreateContactRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *CreateContactRequest) GetSigningKeyName() string {
	if x != nil {
		return x.SigningKeyName
	}
	return ""
}

func (x *CreateContactRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *CreateContactRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Request to get a contact by ID.
type GetContactRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. ID of the account issuer of the contact record.
	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// Required. ID of the contact within the account.
	Id            string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContactRequest) Reset() {
	*x = GetContactRequest{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContactRequest) ProtoMessage() {}

func (x *GetContactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContactRequest.ProtoReflect.Descriptor instead.
func (*GetContactRequest) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{16}
}

func (x *GetContactRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *GetContactRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Request to delete a contact.
type UpdateContactRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. Full snapshot of the updated contact record.
	// Clients should update objects received from GetContact or CreateContact calls.
	// The server will ignore output-only fields like timestamps.
	Contact *Contact `protobuf:"bytes,1,opt,name=contact,proto3" json:"contact,omitempty"`
	// Required. Name of the key to use for signing the contact update.
	SigningKeyName string `protobuf:"bytes,2,opt,name=signing_key_name,json=signingKeyName,proto3" json:"signing_key_name,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateContactRequest) Reset() {
	*x = UpdateContactRequest{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateContactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateContactRequest) ProtoMessage() {}

func (x *UpdateContactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateContactRequest.ProtoReflect.Descriptor instead.
func (*UpdateContactRequest) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateContactRequest) GetContact() *Contact {
	if x != nil {
		return x.Contact
	}
	return nil
}

func (x *UpdateContactRequest) GetSigningKeyName() string {
	if x != nil {
		return x.SigningKeyName
	}
	return ""
}

// Request to delete a contact.
type DeleteContactRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. ID of the account issuer of the contact record.
	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// Required. ID of the contact within the account.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Required. Name of the key to use for signing the contact deletion.
	SigningKeyName string `protobuf:"bytes,3,opt,name=signing_key_name,json=signingKeyName,proto3" json:"signing_key_name,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DeleteContactRequest) Reset() {
	*x = DeleteContactRequest{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteContactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteContactRequest) ProtoMessage() {}

func (x *DeleteContactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteContactRequest.ProtoReflect.Descriptor instead.
func (*DeleteContactRequest) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteContactRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *DeleteContactRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteContactRequest) GetSigningKeyName() string {
	if x != nil {
		return x.SigningKeyName
	}
	return ""
}

// Request to list contacts for an account.
type ListContactsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. Number of results per page. Default is defined by the server.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional. Value from next_page_token obtained from a previous response.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Required. Filter for listing contacts.
	//
	// Types that are valid to be assigned to Filter:
	//
	//	*ListContactsRequest_Account
	//	*ListContactsRequest_Subject
	Filter        isListContactsRequest_Filter `protobuf_oneof:"filter"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListContactsRequest) Reset() {
	*x = ListContactsRequest{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListContactsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContactsRequest) ProtoMessage() {}

func (x *ListContactsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContactsRequest.ProtoReflect.Descriptor instead.
func (*ListContactsRequest) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{19}
}

func (x *ListContactsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListContactsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListContactsRequest) GetFilter() isListContactsRequest_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListContactsRequest) GetAccount() string {
	if x != nil {
		if x, ok := x.Filter.(*ListContactsRequest_Account); ok {
			return x.Account
		}
	}
	return ""
}

func (x *ListContactsRequest) GetSubject() string {
	if x != nil {
		if x, ok := x.Filter.(*ListContactsRequest_Subject); ok {
			return x.Subject
		}
	}
	return ""
}

type isListContactsRequest_Filter interface {
	isListContactsRequest_Filter()
}

type ListContactsRequest_Account struct {
	// Lists contacts by issuer account key.
	// I.e. lists the contacts that an account has ever issued.
	Account string `protobuf:"bytes,3,opt,name=account,proto3,oneof"`
}

type ListContactsRequest_Subject struct {
	// Lists contacts by subject.
	Subject string `protobuf:"bytes,4,opt,name=subject,proto3,oneof"`
}

func (*ListContactsRequest_Account) isListContactsRequest_Filter() {}

func (*ListContactsRequest_Subject) isListContactsRequest_Filter() {}

// Response for listing contacts.
type ListContactsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of contacts.
	Contacts []*Contact `protobuf:"bytes,1,rep,name=contacts,proto3" json:"contacts,omitempty"`
	// Token for the next page if there're more results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListContactsResponse) Reset() {
	*x = ListContactsResponse{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListContactsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContactsResponse) ProtoMessage() {}

func (x *ListContactsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContactsResponse.ProtoReflect.Descriptor instead.
func (*ListContactsResponse) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{20}
}

func (x *ListContactsResponse) GetContacts() []*Contact {
	if x != nil {
		return x.Contacts
	}
	return nil
}

func (x *ListContactsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// Contact information for an account.
type Contact struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the contact.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Subject is the account that's being described by the contact record.
	Subject string `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	// Name is the public name of the contact that we know them by.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Time when the contact was created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Time when the contact was updated.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Account ID that issued this contact.
	Account       string `protobuf:"bytes,6,opt,name=account,proto3" json:"account,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Contact) Reset() {
	*x = Contact{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Contact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact) ProtoMessage() {}

func (x *Contact) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact.ProtoReflect.Descriptor instead.
func (*Contact) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{21}
}

func (x *Contact) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Contact) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Contact) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Contact) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Contact) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Contact) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

// Request to list a directory.
type ListDirectoryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. Size of the page.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional. Pagination token.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Required. ID of the account to list the directory for.
	Account string `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	// Required. Path of the directory to list documents for.
	// Empty string means root directory.
	DirectoryPath string `protobuf:"bytes,4,opt,name=directory_path,json=directoryPath,proto3" json:"directory_path,omitempty"`
	// Optional. If true, list documents recursively.
	Recursive bool `protobuf:"varint,5,opt,name=recursive,proto3" json:"recursive,omitempty"`
	// Optional. If set to true, only documents that the user is subscribed to will be returned.
	SubscribedOnly bool `protobuf:"varint,6,opt,name=subscribed_only,json=subscribedOnly,proto3" json:"subscribed_only,omitempty"`
	// Optional. Configuration for sorting.
	// If not specified, the default sorting is by activity time in descending order.
	SortOptions   *SortOptions `protobuf:"bytes,7,opt,name=sort_options,json=sortOptions,proto3" json:"sort_options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDirectoryRequest) Reset() {
	*x = ListDirectoryRequest{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDirectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirectoryRequest) ProtoMessage() {}

func (x *ListDirectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirectoryRequest.ProtoReflect.Descriptor instead.
func (*ListDirectoryRequest) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{22}
}

func (x *ListDirectoryRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListDirectoryRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListDirectoryRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *ListDirectoryRequest) GetDirectoryPath() string {
	if x != nil {
		return x.DirectoryPath
	}
	return ""
}

func (x *ListDirectoryRequest) GetRecursive() bool {
	if x != nil {
		return x.Recursive
	}
	return false
}

func (x *ListDirectoryRequest) GetSubscribedOnly() bool {
	if x != nil {
		return x.SubscribedOnly
	}
	return false
}

func (x *ListDirectoryRequest) GetSortOptions() *SortOptions {
	if x != nil {
		return x.SortOptions
	}
	return nil
}

// Options for sorting list of documents.
type SortOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Attributes by which the list can be sorted.
	Attribute SortAttribute `protobuf:"varint,1,opt,name=attribute,proto3,enum=com.seed.documents.v3alpha.SortAttribute" json:"attribute,omitempty"`
	// By default sort is ascending (smaller values first).
	// This field can be specified to choose the opposing sorting.
	Descending    bool `protobuf:"varint,2,opt,name=descending,proto3" json:"descending,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SortOptions) Reset() {
	*x = SortOptions{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SortOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortOptions) ProtoMessage() {}

func (x *SortOptions) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortOptions.ProtoReflect.Descriptor instead.
func (*SortOptions) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{23}
}

func (x *SortOptions) GetAttribute() SortAttribute {
	if x != nil {
		return x.Attribute
	}
	return SortAttribute_ACTIVITY_TIME
}

func (x *SortOptions) GetDescending() bool {
	if x != nil {
		return x.Descending
	}
	return false
}

// Response of the directory list.
type ListDirectoryResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of documents.
	Documents []*DocumentInfo `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty"`
	// Optional. Token for the next page if there're more results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDirectoryResponse) Reset() {
	*x = ListDirectoryResponse{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDirectoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirectoryResponse) ProtoMessage() {}

func (x *ListDirectoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirectoryResponse.ProtoReflect.Descriptor instead.
func (*ListDirectoryResponse) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{24}
}

func (x *ListDirectoryResponse) GetDocuments() []*DocumentInfo {
	if x != nil {
		return x.Documents
	}
	return nil
}

func (x *ListDirectoryResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// Request for listing documents.
type ListDocumentsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. ID of the account to list documents for.
	// If not specified, all documents are listed.
	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// Optional. Number of results per page. Default is defined by the server.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional. Value from next_page_token obtained from a previous response.
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDocumentsRequest) Reset() {
	*x = ListDocumentsRequest{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDocumentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDocumentsRequest) ProtoMessage() {}

func (x *ListDocumentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDocumentsRequest.ProtoReflect.Descriptor instead.
func (*ListDocumentsRequest) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{25}
}

func (x *ListDocumentsRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *ListDocumentsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListDocumentsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// Response with list of documents.
type ListDocumentsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of documents.
	Documents []*DocumentInfo `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty"`
	// Token for the next page if there're more results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDocumentsResponse) Reset() {
	*x = ListDocumentsResponse{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDocumentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDocumentsResponse) ProtoMessage() {}

func (x *ListDocumentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDocumentsResponse.ProtoReflect.Descriptor instead.
func (*ListDocumentsResponse) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{26}
}

func (x *ListDocumentsResponse) GetDocuments() []*DocumentInfo {
	if x != nil {
		return x.Documents
	}
	return nil
}

func (x *ListDocumentsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// Request for listing document changes.
type ListDocumentChangesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. ID of the account to list versions for.
	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// Required. Path of the document to list versions for.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// Required. Version of the document to list changes for.
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// Optional. Number of results per page. Default is defined by the server.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional. Value from next_page_token obtained from a previous response.
	PageToken     string `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDocumentChangesRequest) Reset() {
	*x = ListDocumentChangesRequest{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDocumentChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDocumentChangesRequest) ProtoMessage() {}

func (x *ListDocumentChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDocumentChangesRequest.ProtoReflect.Descriptor instead.
func (*ListDocumentChangesRequest) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{27}
}

func (x *ListDocumentChangesRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *ListDocumentChangesRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ListDocumentChangesRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ListDocumentChangesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListDocumentChangesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// Response with list of document versions.
type ListDocumentChangesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of document versions.
	Changes []*DocumentChangeInfo `protobuf:"bytes,1,rep,name=changes,proto3" json:"changes,omitempty"`
	// Token for the next page if there're more results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDocumentChangesResponse) Reset() {
	*x = ListDocumentChangesResponse{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDocumentChangesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDocumentChangesResponse) ProtoMessage() {}

func (x *ListDocumentChangesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDocumentChangesResponse.ProtoReflect.Descriptor instead.
func (*ListDocumentChangesResponse) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{28}
}

func (x *ListDocumentChangesResponse) GetChanges() []*DocumentChangeInfo {
	if x != nil {
		return x.Changes
	}
	return nil
}

func (x *ListDocumentChangesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// Request to get a specific document change.
type GetDocumentChangeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. ID of the change to retrieve.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDocumentChangeRequest) Reset() {
	*x = GetDocumentChangeRequest{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDocumentChangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocumentChangeRequest) ProtoMessage() {}

func (x *GetDocumentChangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocumentChangeRequest.ProtoReflect.Descriptor instead.
func (*GetDocumentChangeRequest) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{29}
}

func (x *GetDocumentChangeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Request to update document's read status.
type UpdateDocumentReadStatusRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. ID of the account to update the document in.
	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// Required. Path of the document to update.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// Required. New read status of the document.
	IsRead bool `protobuf:"varint,3,opt,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`
	// Optional. Whether the status should be updated recursively for children of the path.
	IsRecursive   bool `protobuf:"varint,4,opt,name=is_recursive,json=isRecursive,proto3" json:"is_recursive,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDocumentReadStatusRequest) Reset() {
	*x = UpdateDocumentReadStatusRequest{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDocumentReadStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDocumentReadStatusRequest) ProtoMessage() {}

func (x *UpdateDocumentReadStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDocumentReadStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateDocumentReadStatusRequest) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateDocumentReadStatusRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UpdateDocumentReadStatusRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *UpdateDocumentReadStatusRequest) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

func (x *UpdateDocumentReadStatusRequest) GetIsRecursive() bool {
	if x != nil {
		return x.IsRecursive
	}
	return false
}

// Request to create a Ref.
type CreateRefRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The ID of the account/space in which to create the Ref.
	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// Required. Path of the new Ref.
	// Empty string means root document.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// Required. Target for the new Ref.
	Target *RefTarget `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	// Required. Name of the signing key to use for signing the Ref.
	SigningKeyName string `protobuf:"bytes,4,opt,name=signing_key_name,json=signingKeyName,proto3" json:"signing_key_name,omitempty"`
	// Optional. ID of the Capability blob that grants the necessary rights to the signin key
	// to write Refs for the requested account + path.
	Capability string `protobuf:"bytes,5,opt,name=capability,proto3" json:"capability,omitempty"`
	// Optional. A timestamp of the Ref blob.
	// If not specified the server will use the current time.
	// The provided timestamp will be rounded to the nearest millisecond,
	// so the final timestamp in the resulting Ref blob may not be exactly as provided.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Optional. The generation number for the Ref.
	// If not specified, the server will use the generation number of the most recent generation,
	// or will create a fresh generation number if there are no existing Refs for this path.
	Generation    int64 `protobuf:"varint,7,opt,name=generation,proto3" json:"generation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRefRequest) Reset() {
	*x = CreateRefRequest{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRefRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRefRequest) ProtoMessage() {}

func (x *CreateRefRequest) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRefRequest.ProtoReflect.Descriptor instead.
func (*CreateRefRequest) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{31}
}

func (x *CreateRefRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *CreateRefRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CreateRefRequest) GetTarget() *RefTarget {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *CreateRefRequest) GetSigningKeyName() string {
	if x != nil {
		return x.SigningKeyName
	}
	return ""
}

func (x *CreateRefRequest) GetCapability() string {
	if x != nil {
		return x.Capability
	}
	return ""
}

func (x *CreateRefRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *CreateRefRequest) GetGeneration() int64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

// Request to get a Ref by ID.
type GetRefRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. ID of the Ref blob to retrieve.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRefRequest) Reset() {
	*x = GetRefRequest{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRefRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRefRequest) ProtoMessage() {}

func (x *GetRefRequest) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRefRequest.ProtoReflect.Descriptor instead.
func (*GetRefRequest) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{32}
}

func (x *GetRefRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Information about a particular document version.
type DocumentChangeInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// CID of the change.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Author of the change.
	Author string `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	// List of change IDs that this change depends on.
	Deps []string `protobuf:"bytes,3,rep,name=deps,proto3" json:"deps,omitempty"`
	// Time when the change was created (as claimed by the author).
	CreateTime    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DocumentChangeInfo) Reset() {
	*x = DocumentChangeInfo{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DocumentChangeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentChangeInfo) ProtoMessage() {}

func (x *DocumentChangeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentChangeInfo.ProtoReflect.Descriptor instead.
func (*DocumentChangeInfo) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{33}
}

func (x *DocumentChangeInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DocumentChangeInfo) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *DocumentChangeInfo) GetDeps() []string {
	if x != nil {
		return x.Deps
	}
	return nil
}

func (x *DocumentChangeInfo) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

// Basic data about a document with some aggregations and metadata.
// It's like Document, without the content, but with some additional info.
type DocumentInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Account to which the document belongs.
	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// Path of the document within the account.
	// Empty string means root document.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// User-defined metadata attributes of the document.
	Metadata *structpb.Struct `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Every author ID who has ever made changes to this document.
	Authors []string `protobuf:"bytes,4,rep,name=authors,proto3" json:"authors,omitempty"`
	// Time when the document was created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Time when the document was updated.
	// I.e. timestamp of the most recent change.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// ID of the genesis change of this document.
	Genesis string `protobuf:"bytes,8,opt,name=genesis,proto3" json:"genesis,omitempty"`
	// Current version of the document.
	Version string `protobuf:"bytes,9,opt,name=version,proto3" json:"version,omitempty"`
	// Breadcrumbs of this document.
	// The number of items in this list corresponds to the number of segments
	// in the path of the document minus 1 (the document itself).
	//
	// E.g. for a document "/cars/jp/honda" there will be 2 breadcrumbs: "cars" and "jp".
	//
	// If we don't have a document for some of the path segements for whatever reason,
	// the corresponding breadcrumb segment will be null.
	Breadcrumbs []*Breadcrumb `protobuf:"bytes,10,rep,name=breadcrumbs,proto3" json:"breadcrumbs,omitempty"`
	// Summary of the activity on the document.
	ActivitySummary *ActivitySummary `protobuf:"bytes,11,opt,name=activity_summary,json=activitySummary,proto3" json:"activity_summary,omitempty"`
	// Information about the generation of the document.
	GenerationInfo *GenerationInfo `protobuf:"bytes,12,opt,name=generation_info,json=generationInfo,proto3" json:"generation_info,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DocumentInfo) Reset() {
	*x = DocumentInfo{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DocumentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentInfo) ProtoMessage() {}

func (x *DocumentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentInfo.ProtoReflect.Descriptor instead.
func (*DocumentInfo) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{34}
}

func (x *DocumentInfo) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *DocumentInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DocumentInfo) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *DocumentInfo) GetAuthors() []string {
	if x != nil {
		return x.Authors
	}
	return nil
}

func (x *DocumentInfo) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *DocumentInfo) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *DocumentInfo) GetGenesis() string {
	if x != nil {
		return x.Genesis
	}
	return ""
}

func (x *DocumentInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DocumentInfo) GetBreadcrumbs() []*Breadcrumb {
	if x != nil {
		return x.Breadcrumbs
	}
	return nil
}

func (x *DocumentInfo) GetActivitySummary() *ActivitySummary {
	if x != nil {
		return x.ActivitySummary
	}
	return nil
}

func (x *DocumentInfo) GetGenerationInfo() *GenerationInfo {
	if x != nil {
		return x.GenerationInfo
	}
	return nil
}

// Information about the generation of a document.
type GenerationInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// CID of the genesis change.
	Genesis string `protobuf:"bytes,1,opt,name=genesis,proto3" json:"genesis,omitempty"`
	// A generation number of the document.
	// Usually it's a timestamp of the first time the generation is created,
	// but it shouldn't be used as such, and should instead be treated as an opaque value.
	Generation    int64 `protobuf:"varint,2,opt,name=generation,proto3" json:"generation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerationInfo) Reset() {
	*x = GenerationInfo{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerationInfo) ProtoMessage() {}

func (x *GenerationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerationInfo.ProtoReflect.Descriptor instead.
func (*GenerationInfo) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{35}
}

func (x *GenerationInfo) GetGenesis() string {
	if x != nil {
		return x.Genesis
	}
	return ""
}

func (x *GenerationInfo) GetGeneration() int64 {
	if x != nil {
		return x.Generation
	}
	return 0
}

// Summary of the activity on a document or account.
type ActivitySummary struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Timestamp of the most recent comment.
	LatestCommentTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=latest_comment_time,json=latestCommentTime,proto3" json:"latest_comment_time,omitempty"`
	// ID of the most recent comment.
	LatestCommentId string `protobuf:"bytes,4,opt,name=latest_comment_id,json=latestCommentId,proto3" json:"latest_comment_id,omitempty"`
	// Total number of comments.
	CommentCount int32 `protobuf:"varint,2,opt,name=comment_count,json=commentCount,proto3" json:"comment_count,omitempty"`
	// Timestamp of the most recent change.
	LatestChangeTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=latest_change_time,json=latestChangeTime,proto3" json:"latest_change_time,omitempty"`
	// Whether there's any unread activity on this document/account.
	IsUnread      bool `protobuf:"varint,5,opt,name=is_unread,json=isUnread,proto3" json:"is_unread,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActivitySummary) Reset() {
	*x = ActivitySummary{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivitySummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivitySummary) ProtoMessage() {}

func (x *ActivitySummary) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivitySummary.ProtoReflect.Descriptor instead.
func (*ActivitySummary) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{36}
}

func (x *ActivitySummary) GetLatestCommentTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LatestCommentTime
	}
	return nil
}

func (x *ActivitySummary) GetLatestCommentId() string {
	if x != nil {
		return x.LatestCommentId
	}
	return ""
}

func (x *ActivitySummary) GetCommentCount() int32 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *ActivitySummary) GetLatestChangeTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LatestChangeTime
	}
	return nil
}

func (x *ActivitySummary) GetIsUnread() bool {
	if x != nil {
		return x.IsUnread
	}
	return false
}

// Basic information about ancestor documents in the path hierarchy.
type Breadcrumb struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Title of the document.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Path of the document.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// Will be true if we don't have any indexed information about this document.
	IsMissing     bool `protobuf:"varint,3,opt,name=is_missing,json=isMissing,proto3" json:"is_missing,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Breadcrumb) Reset() {
	*x = Breadcrumb{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Breadcrumb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Breadcrumb) ProtoMessage() {}

func (x *Breadcrumb) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Breadcrumb.ProtoReflect.Descriptor instead.
func (*Breadcrumb) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{37}
}

func (x *Breadcrumb) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Breadcrumb) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Breadcrumb) GetIsMissing() bool {
	if x != nil {
		return x.IsMissing
	}
	return false
}

// Document represents metadata and content of a document.
type Document struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Account to which the document belongs.
	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// Path of the document within the account.
	// Empty string means root document.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// Metadata values for a document.
	Metadata *structpb.Struct `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Output only. Every account ID who has modified the document.
	// Includes the original author as well.
	Authors []string `protobuf:"bytes,5,rep,name=authors,proto3" json:"authors,omitempty"`
	// Blocks content of the document.
	Content []*BlockNode `protobuf:"bytes,6,rep,name=content,proto3" json:"content,omitempty"`
	// Output only. Blocks that were created but not moved into the document content.
	DetachedBlocks map[string]*BlockNode `protobuf:"bytes,14,rep,name=detached_blocks,json=detachedBlocks,proto3" json:"detached_blocks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Output only. Time when document was created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Output only. Time when document was updated.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Output only. ID of the genesis change of this document.
	Genesis string `protobuf:"bytes,9,opt,name=genesis,proto3" json:"genesis,omitempty"`
	// Output only. Current version of the document.
	Version string `protobuf:"bytes,10,opt,name=version,proto3" json:"version,omitempty"`
	// Information about the generation of the document.
	GenerationInfo *GenerationInfo `protobuf:"bytes,13,opt,name=generation_info,json=generationInfo,proto3" json:"generation_info,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Document) Reset() {
	*x = Document{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Document) ProtoMessage() {}

func (x *Document) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Document.ProtoReflect.Descriptor instead.
func (*Document) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{38}
}

func (x *Document) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *Document) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Document) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Document) GetAuthors() []string {
	if x != nil {
		return x.Authors
	}
	return nil
}

func (x *Document) GetContent() []*BlockNode {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Document) GetDetachedBlocks() map[string]*BlockNode {
	if x != nil {
		return x.DetachedBlocks
	}
	return nil
}

func (x *Document) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Document) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Document) GetGenesis() string {
	if x != nil {
		return x.Genesis
	}
	return ""
}

func (x *Document) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Document) GetGenerationInfo() *GenerationInfo {
	if x != nil {
		return x.GenerationInfo
	}
	return nil
}

// Content block with children.
type BlockNode struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Content block.
	Block *Block `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	// Child blocks.
	Children      []*BlockNode `protobuf:"bytes,2,rep,name=children,proto3" json:"children,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockNode) Reset() {
	*x = BlockNode{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockNode) ProtoMessage() {}

func (x *BlockNode) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockNode.ProtoReflect.Descriptor instead.
func (*BlockNode) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{39}
}

func (x *BlockNode) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *BlockNode) GetChildren() []*BlockNode {
	if x != nil {
		return x.Children
	}
	return nil
}

// Content block.
type Block struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Block ID. Must be unique within the document.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Type of the block. Specific to the renderer.
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// Text of the content block.
	Text string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	// Optional. The hyperlink to an external resource.
	// Must be a valid URL.
	Link string `protobuf:"bytes,7,opt,name=link,proto3" json:"link,omitempty"`
	// Remaining type-specific attribtues of the block.
	// Logically, these attributes are on the same level as the other fields,
	// i.e. the field `attributes` should not exist,
	// but because protobuf doesn't support arbitrary fields, and we don't want/need
	// to specify the types of all the possible fields, we use this approach of storing
	// the rest of the fields in this open-ended attributes map.
	// The side-effect of this is that `attributes` map must not have any keys
	// that conflict with the names of the top-level fields.
	Attributes *structpb.Struct `protobuf:"bytes,4,opt,name=attributes,proto3" json:"attributes,omitempty"`
	// Annotation "layers" of the block.
	Annotations []*Annotation `protobuf:"bytes,5,rep,name=annotations,proto3" json:"annotations,omitempty"`
	// Output only. Current revision of the block. It's the ID of the last Change that modified this block.
	// Additional information about the Change can be obtained using the Changes service.
	Revision      string `protobuf:"bytes,6,opt,name=revision,proto3" json:"revision,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Block) Reset() {
	*x = Block{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{40}
}

func (x *Block) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Block) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Block) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Block) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *Block) GetAttributes() *structpb.Struct {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Block) GetAnnotations() []*Annotation {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Block) GetRevision() string {
	if x != nil {
		return x.Revision
	}
	return ""
}

// Conceptual annotation "layer" that is applied to arbitrary spans of block text.
// An "identity" of the layer should be derived deterministically based on its type
// attributes. Spans inside the same annotation can't overlap.
//
// Spans are stored inside the Annotation in a "columnar" format,
// i.e. StructureOfArrays instead of ArrayOfStructures. See: https://en.wikipedia.org/wiki/AoS_and_SoA.
// This is useful to reduce the number of allocations and offers more compact serialization, because
// protobuf is able to "pack" primitive repeated fields more efficiently.
type Annotation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Type of the annotation.
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Optional. A hyperlink to an external resource.
	// Must be a valid URL.
	Link string `protobuf:"bytes,5,opt,name=link,proto3" json:"link,omitempty"`
	// Arbitrary key-value attributes of the annotation.
	Attributes *structpb.Struct `protobuf:"bytes,2,opt,name=attributes,proto3" json:"attributes,omitempty"`
	// Start offsets of possibly disjoint spans of text for which this annotation is applied.
	// Must be sorted and have the same number of items as `ends` list.
	Starts []int32 `protobuf:"varint,3,rep,packed,name=starts,proto3" json:"starts,omitempty"`
	// End offsets of possibly disjoint spans of text for which this annotation is applied.
	// Must be sorted and have the same number of items as `starts` list.
	Ends          []int32 `protobuf:"varint,4,rep,packed,name=ends,proto3" json:"ends,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Annotation) Reset() {
	*x = Annotation{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Annotation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Annotation) ProtoMessage() {}

func (x *Annotation) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Annotation.ProtoReflect.Descriptor instead.
func (*Annotation) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{41}
}

func (x *Annotation) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Annotation) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *Annotation) GetAttributes() *structpb.Struct {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Annotation) GetStarts() []int32 {
	if x != nil {
		return x.Starts
	}
	return nil
}

func (x *Annotation) GetEnds() []int32 {
	if x != nil {
		return x.Ends
	}
	return nil
}

// Granular document change.
type DocumentChange struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Op:
	//
	//	*DocumentChange_SetMetadata_
	//	*DocumentChange_MoveBlock_
	//	*DocumentChange_ReplaceBlock
	//	*DocumentChange_DeleteBlock
	//	*DocumentChange_SetAttribute_
	Op            isDocumentChange_Op `protobuf_oneof:"op"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DocumentChange) Reset() {
	*x = DocumentChange{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DocumentChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentChange) ProtoMessage() {}

func (x *DocumentChange) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentChange.ProtoReflect.Descriptor instead.
func (*DocumentChange) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{42}
}

func (x *DocumentChange) GetOp() isDocumentChange_Op {
	if x != nil {
		return x.Op
	}
	return nil
}

func (x *DocumentChange) GetSetMetadata() *DocumentChange_SetMetadata {
	if x != nil {
		if x, ok := x.Op.(*DocumentChange_SetMetadata_); ok {
			return x.SetMetadata
		}
	}
	return nil
}

func (x *DocumentChange) GetMoveBlock() *DocumentChange_MoveBlock {
	if x != nil {
		if x, ok := x.Op.(*DocumentChange_MoveBlock_); ok {
			return x.MoveBlock
		}
	}
	return nil
}

func (x *DocumentChange) GetReplaceBlock() *Block {
	if x != nil {
		if x, ok := x.Op.(*DocumentChange_ReplaceBlock); ok {
			return x.ReplaceBlock
		}
	}
	return nil
}

func (x *DocumentChange) GetDeleteBlock() string {
	if x != nil {
		if x, ok := x.Op.(*DocumentChange_DeleteBlock); ok {
			return x.DeleteBlock
		}
	}
	return ""
}

func (x *DocumentChange) GetSetAttribute() *DocumentChange_SetAttribute {
	if x != nil {
		if x, ok := x.Op.(*DocumentChange_SetAttribute_); ok {
			return x.SetAttribute
		}
	}
	return nil
}

type isDocumentChange_Op interface {
	isDocumentChange_Op()
}

type DocumentChange_SetMetadata_ struct {
	// New metadata to set on the document.
	//
	// Deprecated: Use SetAttribute instead.
	SetMetadata *DocumentChange_SetMetadata `protobuf:"bytes,1,opt,name=set_metadata,json=setMetadata,proto3,oneof"`
}

type DocumentChange_MoveBlock_ struct {
	// Move operation that creates/moves a block within the document hierarchy.
	MoveBlock *DocumentChange_MoveBlock `protobuf:"bytes,2,opt,name=move_block,json=moveBlock,proto3,oneof"`
}

type DocumentChange_ReplaceBlock struct {
	// New block state that replaces an existing block.
	ReplaceBlock *Block `protobuf:"bytes,3,opt,name=replace_block,json=replaceBlock,proto3,oneof"`
}

type DocumentChange_DeleteBlock struct {
	// ID of a block to delete.
	DeleteBlock string `protobuf:"bytes,4,opt,name=delete_block,json=deleteBlock,proto3,oneof"`
}

type DocumentChange_SetAttribute_ struct {
	// Sets an attribute on a block.
	SetAttribute *DocumentChange_SetAttribute `protobuf:"bytes,5,opt,name=set_attribute,json=setAttribute,proto3,oneof"`
}

func (*DocumentChange_SetMetadata_) isDocumentChange_Op() {}

func (*DocumentChange_MoveBlock_) isDocumentChange_Op() {}

func (*DocumentChange_ReplaceBlock) isDocumentChange_Op() {}

func (*DocumentChange_DeleteBlock) isDocumentChange_Op() {}

func (*DocumentChange_SetAttribute_) isDocumentChange_Op() {}

// Description of a Ref blob.
type Ref struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// CID of the Ref blob.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Account (space) in which the Ref blob exists.
	Account string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	// Path in the account Ref creates an entry for.
	Path string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	// Description of where the Ref points to.
	Target *RefTarget `protobuf:"bytes,4,opt,name=target,proto3" json:"target,omitempty"`
	// Public key used to sign the Ref blob.
	Signer string `protobuf:"bytes,5,opt,name=signer,proto3" json:"signer,omitempty"`
	// Optional. ID of the Capability attached to this Ref.
	Capability string `protobuf:"bytes,6,opt,name=capability,proto3" json:"capability,omitempty"`
	// Timestamp of the Ref.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Information about the generation of the Ref.
	GenerationInfo *GenerationInfo `protobuf:"bytes,8,opt,name=generation_info,json=generationInfo,proto3" json:"generation_info,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Ref) Reset() {
	*x = Ref{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ref) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ref) ProtoMessage() {}

func (x *Ref) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ref.ProtoReflect.Descriptor instead.
func (*Ref) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{43}
}

func (x *Ref) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Ref) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *Ref) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Ref) GetTarget() *RefTarget {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *Ref) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

func (x *Ref) GetCapability() string {
	if x != nil {
		return x.Capability
	}
	return ""
}

func (x *Ref) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Ref) GetGenerationInfo() *GenerationInfo {
	if x != nil {
		return x.GenerationInfo
	}
	return nil
}

// Description of where the Ref points to.
type RefTarget struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A Ref can point to one of the following targets.
	//
	// Types that are valid to be assigned to Target:
	//
	//	*RefTarget_Version_
	//	*RefTarget_Redirect_
	//	*RefTarget_Tombstone_
	Target        isRefTarget_Target `protobuf_oneof:"target"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefTarget) Reset() {
	*x = RefTarget{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefTarget) ProtoMessage() {}

func (x *RefTarget) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefTarget.ProtoReflect.Descriptor instead.
func (*RefTarget) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{44}
}

func (x *RefTarget) GetTarget() isRefTarget_Target {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *RefTarget) GetVersion() *RefTarget_Version {
	if x != nil {
		if x, ok := x.Target.(*RefTarget_Version_); ok {
			return x.Version
		}
	}
	return nil
}

func (x *RefTarget) GetRedirect() *RefTarget_Redirect {
	if x != nil {
		if x, ok := x.Target.(*RefTarget_Redirect_); ok {
			return x.Redirect
		}
	}
	return nil
}

func (x *RefTarget) GetTombstone() *RefTarget_Tombstone {
	if x != nil {
		if x, ok := x.Target.(*RefTarget_Tombstone_); ok {
			return x.Tombstone
		}
	}
	return nil
}

type isRefTarget_Target interface {
	isRefTarget_Target()
}

type RefTarget_Version_ struct {
	// Version target describes genesis + head changes (version).
	Version *RefTarget_Version `protobuf:"bytes,1,opt,name=version,proto3,oneof"`
}

type RefTarget_Redirect_ struct {
	// Redirect target makes a Ref point to a different account + path.
	// Users must be careful to not create cycles or very deep redirect chains.
	// Client should be careful not to get stuck in redirects
	// by tracking visited paths to prevent cycles,
	// and by limiting the depth of the redirect chains,
	// while handling redirects.
	Redirect *RefTarget_Redirect `protobuf:"bytes,2,opt,name=redirect,proto3,oneof"`
}

type RefTarget_Tombstone_ struct {
	// Tombstone Ref indicates the intent to delete the given account + path.
	Tombstone *RefTarget_Tombstone `protobuf:"bytes,3,opt,name=tombstone,proto3,oneof"`
}

func (*RefTarget_Version_) isRefTarget_Target() {}

func (*RefTarget_Redirect_) isRefTarget_Target() {}

func (*RefTarget_Tombstone_) isRefTarget_Target() {}

// Operation to move an existing block to a different place in the document.
// Move and Create operations are both expressed with this.
// Conceptually new blocks are moved out of nowhere into the document.
type DocumentChange_MoveBlock struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the block to move.
	BlockId string `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	// ID of the new parent for the block being moved.
	Parent string `protobuf:"bytes,2,opt,name=parent,proto3" json:"parent,omitempty"`
	// ID of the new left sibling for the block being moved.
	LeftSibling   string `protobuf:"bytes,3,opt,name=left_sibling,json=leftSibling,proto3" json:"left_sibling,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DocumentChange_MoveBlock) Reset() {
	*x = DocumentChange_MoveBlock{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DocumentChange_MoveBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentChange_MoveBlock) ProtoMessage() {}

func (x *DocumentChange_MoveBlock) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentChange_MoveBlock.ProtoReflect.Descriptor instead.
func (*DocumentChange_MoveBlock) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{42, 0}
}

func (x *DocumentChange_MoveBlock) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *DocumentChange_MoveBlock) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *DocumentChange_MoveBlock) GetLeftSibling() string {
	if x != nil {
		return x.LeftSibling
	}
	return ""
}

// Operation to replace a metadata field with a new value
//
// Deprecated: Use SetAttribute instead.
type DocumentChange_SetMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Metadata key to set.
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Metadata value to set.
	Value         string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DocumentChange_SetMetadata) Reset() {
	*x = DocumentChange_SetMetadata{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DocumentChange_SetMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentChange_SetMetadata) ProtoMessage() {}

func (x *DocumentChange_SetMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentChange_SetMetadata.ProtoReflect.Descriptor instead.
func (*DocumentChange_SetMetadata) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{42, 1}
}

func (x *DocumentChange_SetMetadata) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DocumentChange_SetMetadata) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Operation to set an attribute of a block or document.
type DocumentChange_SetAttribute struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the block to set the attribute on.
	//
	// Empty string means the document itself.
	// Special strings "footer" and "header" can be used to set attributes on the document footer and header blocks.
	BlockId string `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	// A path of keys to set the value for.
	// It's a list to support nested attributes.
	Key []string `protobuf:"bytes,2,rep,name=key,proto3" json:"key,omitempty"`
	// Value to set.
	//
	// Types that are valid to be assigned to Value:
	//
	//	*DocumentChange_SetAttribute_StringValue
	//	*DocumentChange_SetAttribute_IntValue
	//	*DocumentChange_SetAttribute_BoolValue
	//	*DocumentChange_SetAttribute_NullValue
	Value         isDocumentChange_SetAttribute_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DocumentChange_SetAttribute) Reset() {
	*x = DocumentChange_SetAttribute{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DocumentChange_SetAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentChange_SetAttribute) ProtoMessage() {}

func (x *DocumentChange_SetAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentChange_SetAttribute.ProtoReflect.Descriptor instead.
func (*DocumentChange_SetAttribute) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{42, 2}
}

func (x *DocumentChange_SetAttribute) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *DocumentChange_SetAttribute) GetKey() []string {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *DocumentChange_SetAttribute) GetValue() isDocumentChange_SetAttribute_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *DocumentChange_SetAttribute) GetStringValue() string {
	if x != nil {
		if x, ok := x.Value.(*DocumentChange_SetAttribute_StringValue); ok {
			return x.StringValue
		}
	}
	return ""
}

func (x *DocumentChange_SetAttribute) GetIntValue() int64 {
	if x != nil {
		if x, ok := x.Value.(*DocumentChange_SetAttribute_IntValue); ok {
			return x.IntValue
		}
	}
	return 0
}

func (x *DocumentChange_SetAttribute) GetBoolValue() bool {
	if x != nil {
		if x, ok := x.Value.(*DocumentChange_SetAttribute_BoolValue); ok {
			return x.BoolValue
		}
	}
	return false
}

func (x *DocumentChange_SetAttribute) GetNullValue() *emptypb.Empty {
	if x != nil {
		if x, ok := x.Value.(*DocumentChange_SetAttribute_NullValue); ok {
			return x.NullValue
		}
	}
	return nil
}

type isDocumentChange_SetAttribute_Value interface {
	isDocumentChange_SetAttribute_Value()
}

type DocumentChange_SetAttribute_StringValue struct {
	StringValue string `protobuf:"bytes,3,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type DocumentChange_SetAttribute_IntValue struct {
	IntValue int64 `protobuf:"varint,4,opt,name=int_value,json=intValue,proto3,oneof"`
}

type DocumentChange_SetAttribute_BoolValue struct {
	BoolValue bool `protobuf:"varint,5,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type DocumentChange_SetAttribute_NullValue struct {
	NullValue *emptypb.Empty `protobuf:"bytes,6,opt,name=null_value,json=nullValue,proto3,oneof"`
}

func (*DocumentChange_SetAttribute_StringValue) isDocumentChange_SetAttribute_Value() {}

func (*DocumentChange_SetAttribute_IntValue) isDocumentChange_SetAttribute_Value() {}

func (*DocumentChange_SetAttribute_BoolValue) isDocumentChange_SetAttribute_Value() {}

func (*DocumentChange_SetAttribute_NullValue) isDocumentChange_SetAttribute_Value() {}

type RefTarget_Version struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. ID of the genesis Change.
	Genesis string `protobuf:"bytes,1,opt,name=genesis,proto3" json:"genesis,omitempty"`
	// Required. Version ID (possibly compount).
	// Each change in the version ID must have the same genesis.
	Version       string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefTarget_Version) Reset() {
	*x = RefTarget_Version{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefTarget_Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefTarget_Version) ProtoMessage() {}

func (x *RefTarget_Version) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefTarget_Version.ProtoReflect.Descriptor instead.
func (*RefTarget_Version) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{44, 0}
}

func (x *RefTarget_Version) GetGenesis() string {
	if x != nil {
		return x.Genesis
	}
	return ""
}

func (x *RefTarget_Version) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type RefTarget_Redirect struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. Account ID to which the Ref should redirect.
	// Can be the same as the account in the Ref itself,
	// when we redirect to a different path in the same account/space.
	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// Required. Path to which the Ref should redirect.
	// Empty string means root document.
	// Must not be the same as the Ref itself.
	Path          string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefTarget_Redirect) Reset() {
	*x = RefTarget_Redirect{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefTarget_Redirect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefTarget_Redirect) ProtoMessage() {}

func (x *RefTarget_Redirect) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefTarget_Redirect.ProtoReflect.Descriptor instead.
func (*RefTarget_Redirect) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{44, 1}
}

func (x *RefTarget_Redirect) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *RefTarget_Redirect) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type RefTarget_Tombstone struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefTarget_Tombstone) Reset() {
	*x = RefTarget_Tombstone{}
	mi := &file_documents_v3alpha_documents_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefTarget_Tombstone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefTarget_Tombstone) ProtoMessage() {}

func (x *RefTarget_Tombstone) ProtoReflect() protoreflect.Message {
	mi := &file_documents_v3alpha_documents_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefTarget_Tombstone.ProtoReflect.Descriptor instead.
func (*RefTarget_Tombstone) Descriptor() ([]byte, []int) {
	return file_documents_v3alpha_documents_proto_rawDescGZIP(), []int{44, 2}
}

var File_documents_v3alpha_documents_proto protoreflect.FileDescriptor

const file_documents_v3alpha_documents_proto_rawDesc = "" +
	"\n" +
	"!documents/v3alpha/documents.proto\x12\x1acom.seed.documents.v3alpha\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/protobuf/struct.proto\"\\\n" +
	"\x12GetDocumentRequest\x12\x18\n" +
	"\aaccount\x18\x01 \x01(\tR\aaccount\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\"^\n" +
	"\x14RedirectErrorDetails\x12%\n" +
	"\x0etarget_account\x18\x01 \x01(\tR\rtargetAccount\x12\x1f\n" +
	"\vtarget_path\x18\x02 \x01(\tR\n" +
	"targetPath\"\xb8\x02\n" +
	"\x1bCreateDocumentChangeRequest\x12\x18\n" +
	"\aaccount\x18\x01 \x01(\tR\aaccount\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12!\n" +
	"\fbase_version\x18\x03 \x01(\tR\vbaseVersion\x12D\n" +
	"\achanges\x18\x04 \x03(\v2*.com.seed.documents.v3alpha.DocumentChangeR\achanges\x12(\n" +
	"\x10signing_key_name\x18\x05 \x01(\tR\x0esigningKeyName\x12\x1e\n" +
	"\n" +
	"capability\x18\x06 \x01(\tR\n" +
	"capability\x128\n" +
	"\ttimestamp\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"E\n" +
	"\x15DeleteDocumentRequest\x12\x18\n" +
	"\aaccount\x18\x01 \x01(\tR\aaccount\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\"V\n" +
	"\x18ListRootDocumentsRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\"\x8b\x01\n" +
	"\x19ListRootDocumentsResponse\x12F\n" +
	"\tdocuments\x18\x01 \x03(\v2(.com.seed.documents.v3alpha.DocumentInfoR\tdocuments\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\xc6\x01\n" +
	"\x13ListAccountsRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12'\n" +
	"\x0fsubscribed_only\x18\x03 \x01(\bR\x0esubscribedOnly\x12J\n" +
	"\fsort_options\x18\x04 \x01(\v2'.com.seed.documents.v3alpha.SortOptionsR\vsortOptions\"\x7f\n" +
	"\x14ListAccountsResponse\x12?\n" +
	"\baccounts\x18\x01 \x03(\v2#.com.seed.documents.v3alpha.AccountR\baccounts\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"#\n" +
	"\x11GetAccountRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"+\n" +
	"\x17BatchGetAccountsRequest\x12\x10\n" +
	"\x03ids\x18\x01 \x03(\tR\x03ids\"\xf1\x02\n" +
	"\x18BatchGetAccountsResponse\x12^\n" +
	"\baccounts\x18\x01 \x03(\v2B.com.seed.documents.v3alpha.BatchGetAccountsResponse.AccountsEntryR\baccounts\x12X\n" +
	"\x06errors\x18\x02 \x03(\v2@.com.seed.documents.v3alpha.BatchGetAccountsResponse.ErrorsEntryR\x06errors\x1a`\n" +
	"\rAccountsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x129\n" +
	"\x05value\x18\x02 \x01(\v2#.com.seed.documents.v3alpha.AccountR\x05value:\x028\x01\x1a9\n" +
	"\vErrorsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\"\x99\x01\n" +
	"\x14UpdateProfileRequest\x12\x18\n" +
	"\aaccount\x18\x01 \x01(\tR\aaccount\x12=\n" +
	"\aprofile\x18\x02 \x01(\v2#.com.seed.documents.v3alpha.ProfileR\aprofile\x12(\n" +
	"\x10signing_key_name\x18\x03 \x01(\tR\x0esigningKeyName\"\xaf\x02\n" +
	"\aAccount\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x123\n" +
	"\bmetadata\x18\x02 \x01(\v2\x17.google.protobuf.StructR\bmetadata\x12V\n" +
	"\x10activity_summary\x18\x03 \x01(\v2+.com.seed.documents.v3alpha.ActivitySummaryR\x0factivitySummary\x12#\n" +
	"\ris_subscribed\x18\x04 \x01(\bR\fisSubscribed\x12#\n" +
	"\ralias_account\x18\x05 \x01(\tR\faliasAccount\x12=\n" +
	"\aprofile\x18\x06 \x01(\v2#.com.seed.documents.v3alpha.ProfileR\aprofile\"\x90\x01\n" +
	"\aProfile\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04icon\x18\x02 \x01(\tR\x04icon\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12;\n" +
	"\vupdate_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"updateTime\"c\n" +
	"\x12CreateAliasRequest\x12(\n" +
	"\x10signing_key_name\x18\x01 \x01(\tR\x0esigningKeyName\x12#\n" +
	"\ralias_account\x18\x02 \x01(\tR\faliasAccount\"\x88\x01\n" +
	"\x14CreateContactRequest\x12\x18\n" +
	"\aaccount\x18\x01 \x01(\tR\aaccount\x12(\n" +
	"\x10signing_key_name\x18\x02 \x01(\tR\x0esigningKeyName\x12\x18\n" +
	"\asubject\x18\x03 \x01(\tR\asubject\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\"=\n" +
	"\x11GetContactRequest\x12\x18\n" +
	"\aaccount\x18\x01 \x01(\tR\aaccount\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"\x7f\n" +
	"\x14UpdateContactRequest\x12=\n" +
	"\acontact\x18\x01 \x01(\v2#.com.seed.documents.v3alpha.ContactR\acontact\x12(\n" +
	"\x10signing_key_name\x18\x02 \x01(\tR\x0esigningKeyName\"j\n" +
	"\x14DeleteContactRequest\x12\x18\n" +
	"\aaccount\x18\x01 \x01(\tR\aaccount\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12(\n" +
	"\x10signing_key_name\x18\x03 \x01(\tR\x0esigningKeyName\"\x93\x01\n" +
	"\x13ListContactsRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12\x1a\n" +
	"\aaccount\x18\x03 \x01(\tH\x00R\aaccount\x12\x1a\n" +
	"\asubject\x18\x04 \x01(\tH\x00R\asubjectB\b\n" +
	"\x06filter\"\x7f\n" +
	"\x14ListContactsResponse\x12?\n" +
	"\bcontacts\x18\x01 \x03(\v2#.com.seed.documents.v3alpha.ContactR\bcontacts\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\xdb\x01\n" +
	"\aContact\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\asubject\x18\x02 \x01(\tR\asubject\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12;\n" +
	"\vcreate_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime\x12;\n" +
	"\vupdate_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"updateTime\x12\x18\n" +
	"\aaccount\x18\x06 \x01(\tR\aaccount\"\xa6\x02\n" +
	"\x14ListDirectoryRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12\x18\n" +
	"\aaccount\x18\x03 \x01(\tR\aaccount\x12%\n" +
	"\x0edirectory_path\x18\x04 \x01(\tR\rdirectoryPath\x12\x1c\n" +
	"\trecursive\x18\x05 \x01(\bR\trecursive\x12'\n" +
	"\x0fsubscribed_only\x18\x06 \x01(\bR\x0esubscribedOnly\x12J\n" +
	"\fsort_options\x18\a \x01(\v2'.com.seed.documents.v3alpha.SortOptionsR\vsortOptions\"v\n" +
	"\vSortOptions\x12G\n" +
	"\tattribute\x18\x01 \x01(\x0e2).com.seed.documents.v3alpha.SortAttributeR\tattribute\x12\x1e\n" +
	"\n" +
	"descending\x18\x02 \x01(\bR\n" +
	"descending\"\x87\x01\n" +
	"\x15ListDirectoryResponse\x12F\n" +
	"\tdocuments\x18\x01 \x03(\v2(.com.seed.documents.v3alpha.DocumentInfoR\tdocuments\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"l\n" +
	"\x14ListDocumentsRequest\x12\x18\n" +
	"\aaccount\x18\x01 \x01(\tR\aaccount\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\"\x87\x01\n" +
	"\x15ListDocumentsResponse\x12F\n" +
	"\tdocuments\x18\x01 \x03(\v2(.com.seed.documents.v3alpha.DocumentInfoR\tdocuments\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\xa0\x01\n" +
	"\x1aListDocumentChangesRequest\x12\x18\n" +
	"\aaccount\x18\x01 \x01(\tR\aaccount\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x05 \x01(\tR\tpageToken\"\x8f\x01\n" +
	"\x1bListDocumentChangesResponse\x12H\n" +
	"\achanges\x18\x01 \x03(\v2..com.seed.documents.v3alpha.DocumentChangeInfoR\achanges\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"*\n" +
	"\x18GetDocumentChangeRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x8b\x01\n" +
	"\x1fUpdateDocumentReadStatusRequest\x12\x18\n" +
	"\aaccount\x18\x01 \x01(\tR\aaccount\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12\x17\n" +
	"\ais_read\x18\x03 \x01(\bR\x06isRead\x12!\n" +
	"\fis_recursive\x18\x04 \x01(\bR\visRecursive\"\xa3\x02\n" +
	"\x10CreateRefRequest\x12\x18\n" +
	"\aaccount\x18\x01 \x01(\tR\aaccount\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12=\n" +
	"\x06target\x18\x03 \x01(\v2%.com.seed.documents.v3alpha.RefTargetR\x06target\x12(\n" +
	"\x10signing_key_name\x18\x04 \x01(\tR\x0esigningKeyName\x12\x1e\n" +
	"\n" +
	"capability\x18\x05 \x01(\tR\n" +
	"capability\x128\n" +
	"\ttimestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1e\n" +
	"\n" +
	"generation\x18\a \x01(\x03R\n" +
	"generation\"\x1f\n" +
	"\rGetRefRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x8d\x01\n" +
	"\x12DocumentChangeInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06author\x18\x02 \x01(\tR\x06author\x12\x12\n" +
	"\x04deps\x18\x03 \x03(\tR\x04deps\x12;\n" +
	"\vcreate_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime\"\xb0\x04\n" +
	"\fDocumentInfo\x12\x18\n" +
	"\aaccount\x18\x01 \x01(\tR\aaccount\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x123\n" +
	"\bmetadata\x18\x03 \x01(\v2\x17.google.protobuf.StructR\bmetadata\x12\x18\n" +
	"\aauthors\x18\x04 \x03(\tR\aauthors\x12;\n" +
	"\vcreate_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime\x12;\n" +
	"\vupdate_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"updateTime\x12\x18\n" +
	"\agenesis\x18\b \x01(\tR\agenesis\x12\x18\n" +
	"\aversion\x18\t \x01(\tR\aversion\x12H\n" +
	"\vbreadcrumbs\x18\n" +
	" \x03(\v2&.com.seed.documents.v3alpha.BreadcrumbR\vbreadcrumbs\x12V\n" +
	"\x10activity_summary\x18\v \x01(\v2+.com.seed.documents.v3alpha.ActivitySummaryR\x0factivitySummary\x12S\n" +
	"\x0fgeneration_info\x18\f \x01(\v2*.com.seed.documents.v3alpha.GenerationInfoR\x0egenerationInfo\"J\n" +
	"\x0eGenerationInfo\x12\x18\n" +
	"\agenesis\x18\x01 \x01(\tR\agenesis\x12\x1e\n" +
	"\n" +
	"generation\x18\x02 \x01(\x03R\n" +
	"generation\"\x95\x02\n" +
	"\x0fActivitySummary\x12J\n" +
	"\x13latest_comment_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x11latestCommentTime\x12*\n" +
	"\x11latest_comment_id\x18\x04 \x01(\tR\x0flatestCommentId\x12#\n" +
	"\rcomment_count\x18\x02 \x01(\x05R\fcommentCount\x12H\n" +
	"\x12latest_change_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x10latestChangeTime\x12\x1b\n" +
	"\tis_unread\x18\x05 \x01(\bR\bisUnread\"S\n" +
	"\n" +
	"Breadcrumb\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12\x1d\n" +
	"\n" +
	"is_missing\x18\x03 \x01(\bR\tisMissing\"\xa4\x05\n" +
	"\bDocument\x12\x18\n" +
	"\aaccount\x18\x01 \x01(\tR\aaccount\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x123\n" +
	"\bmetadata\x18\x03 \x01(\v2\x17.google.protobuf.StructR\bmetadata\x12\x18\n" +
	"\aauthors\x18\x05 \x03(\tR\aauthors\x12?\n" +
	"\acontent\x18\x06 \x03(\v2%.com.seed.documents.v3alpha.BlockNodeR\acontent\x12a\n" +
	"\x0fdetached_blocks\x18\x0e \x03(\v28.com.seed.documents.v3alpha.Document.DetachedBlocksEntryR\x0edetachedBlocks\x12;\n" +
	"\vcreate_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime\x12;\n" +
	"\vupdate_time\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"updateTime\x12\x18\n" +
	"\agenesis\x18\t \x01(\tR\agenesis\x12\x18\n" +
	"\aversion\x18\n" +
	" \x01(\tR\aversion\x12S\n" +
	"\x0fgeneration_info\x18\r \x01(\v2*.com.seed.documents.v3alpha.GenerationInfoR\x0egenerationInfo\x1ah\n" +
	"\x13DetachedBlocksEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12;\n" +
	"\x05value\x18\x02 \x01(\v2%.com.seed.documents.v3alpha.BlockNodeR\x05value:\x028\x01J\x04\b\v\x10\fJ\x04\b\f\x10\r\"\x87\x01\n" +
	"\tBlockNode\x127\n" +
	"\x05block\x18\x01 \x01(\v2!.com.seed.documents.v3alpha.BlockR\x05block\x12A\n" +
	"\bchildren\x18\x02 \x03(\v2%.com.seed.documents.v3alpha.BlockNodeR\bchildren\"\xf2\x01\n" +
	"\x05Block\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x12\n" +
	"\x04text\x18\x03 \x01(\tR\x04text\x12\x12\n" +
	"\x04link\x18\a \x01(\tR\x04link\x127\n" +
	"\n" +
	"attributes\x18\x04 \x01(\v2\x17.google.protobuf.StructR\n" +
	"attributes\x12H\n" +
	"\vannotations\x18\x05 \x03(\v2&.com.seed.documents.v3alpha.AnnotationR\vannotations\x12\x1a\n" +
	"\brevision\x18\x06 \x01(\tR\brevision\"\x99\x01\n" +
	"\n" +
	"Annotation\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x12\n" +
	"\x04link\x18\x05 \x01(\tR\x04link\x127\n" +
	"\n" +
	"attributes\x18\x02 \x01(\v2\x17.google.protobuf.StructR\n" +
	"attributes\x12\x16\n" +
	"\x06starts\x18\x03 \x03(\x05R\x06starts\x12\x12\n" +
	"\x04ends\x18\x04 \x03(\x05R\x04ends\"\x98\x06\n" +
	"\x0eDocumentChange\x12[\n" +
	"\fset_metadata\x18\x01 \x01(\v26.com.seed.documents.v3alpha.DocumentChange.SetMetadataH\x00R\vsetMetadata\x12U\n" +
	"\n" +
	"move_block\x18\x02 \x01(\v24.com.seed.documents.v3alpha.DocumentChange.MoveBlockH\x00R\tmoveBlock\x12H\n" +
	"\rreplace_block\x18\x03 \x01(\v2!.com.seed.documents.v3alpha.BlockH\x00R\freplaceBlock\x12#\n" +
	"\fdelete_block\x18\x04 \x01(\tH\x00R\vdeleteBlock\x12^\n" +
	"\rset_attribute\x18\x05 \x01(\v27.com.seed.documents.v3alpha.DocumentChange.SetAttributeH\x00R\fsetAttribute\x1aa\n" +
	"\tMoveBlock\x12\x19\n" +
	"\bblock_id\x18\x01 \x01(\tR\ablockId\x12\x16\n" +
	"\x06parent\x18\x02 \x01(\tR\x06parent\x12!\n" +
	"\fleft_sibling\x18\x03 \x01(\tR\vleftSibling\x1a5\n" +
	"\vSetMetadata\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x1a\xe2\x01\n" +
	"\fSetAttribute\x12\x19\n" +
	"\bblock_id\x18\x01 \x01(\tR\ablockId\x12\x10\n" +
	"\x03key\x18\x02 \x03(\tR\x03key\x12#\n" +
	"\fstring_value\x18\x03 \x01(\tH\x00R\vstringValue\x12\x1d\n" +
	"\tint_value\x18\x04 \x01(\x03H\x00R\bintValue\x12\x1f\n" +
	"\n" +
	"bool_value\x18\x05 \x01(\bH\x00R\tboolValue\x127\n" +
	"\n" +
	"null_value\x18\x06 \x01(\v2\x16.google.protobuf.EmptyH\x00R\tnullValueB\a\n" +
	"\x05valueB\x04\n" +
	"\x02op\"\xc9\x02\n" +
	"\x03Ref\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\aaccount\x18\x02 \x01(\tR\aaccount\x12\x12\n" +
	"\x04path\x18\x03 \x01(\tR\x04path\x12=\n" +
	"\x06target\x18\x04 \x01(\v2%.com.seed.documents.v3alpha.RefTargetR\x06target\x12\x16\n" +
	"\x06signer\x18\x05 \x01(\tR\x06signer\x12\x1e\n" +
	"\n" +
	"capability\x18\x06 \x01(\tR\n" +
	"capability\x128\n" +
	"\ttimestamp\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12S\n" +
	"\x0fgeneration_info\x18\b \x01(\v2*.com.seed.documents.v3alpha.GenerationInfoR\x0egenerationInfo\"\x85\x03\n" +
	"\tRefTarget\x12I\n" +
	"\aversion\x18\x01 \x01(\v2-.com.seed.documents.v3alpha.RefTarget.VersionH\x00R\aversion\x12L\n" +
	"\bredirect\x18\x02 \x01(\v2..com.seed.documents.v3alpha.RefTarget.RedirectH\x00R\bredirect\x12O\n" +
	"\ttombstone\x18\x03 \x01(\v2/.com.seed.documents.v3alpha.RefTarget.TombstoneH\x00R\ttombstone\x1a=\n" +
	"\aVersion\x12\x18\n" +
	"\agenesis\x18\x01 \x01(\tR\agenesis\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x1a8\n" +
	"\bRedirect\x12\x18\n" +
	"\aaccount\x18\x01 \x01(\tR\aaccount\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x1a\v\n" +
	"\tTombstoneB\b\n" +
	"\x06target*6\n" +
	"\rSortAttribute\x12\x11\n" +
	"\rACTIVITY_TIME\x10\x00\x12\b\n" +
	"\x04NAME\x10\x01\x12\b\n" +
	"\x04PATH\x10\x022\xf2\x11\n" +
	"\tDocuments\x12c\n" +
	"\vGetDocument\x12..com.seed.documents.v3alpha.GetDocumentRequest\x1a$.com.seed.documents.v3alpha.Document\x12u\n" +
	"\x14CreateDocumentChange\x127.com.seed.documents.v3alpha.CreateDocumentChangeRequest\x1a$.com.seed.documents.v3alpha.Document\x12`\n" +
	"\x0eDeleteDocument\x121.com.seed.documents.v3alpha.DeleteDocumentRequest\x1a\x16.google.protobuf.Empty\"\x03\x88\x02\x01\x12q\n" +
	"\fListAccounts\x12/.com.seed.documents.v3alpha.ListAccountsRequest\x1a0.com.seed.documents.v3alpha.ListAccountsResponse\x12`\n" +
	"\n" +
	"GetAccount\x12-.com.seed.documents.v3alpha.GetAccountRequest\x1a#.com.seed.documents.v3alpha.Account\x12}\n" +
	"\x10BatchGetAccounts\x123.com.seed.documents.v3alpha.BatchGetAccountsRequest\x1a4.com.seed.documents.v3alpha.BatchGetAccountsResponse\x12f\n" +
	"\rUpdateProfile\x120.com.seed.documents.v3alpha.UpdateProfileRequest\x1a#.com.seed.documents.v3alpha.Account\x12U\n" +
	"\vCreateAlias\x12..com.seed.documents.v3alpha.CreateAliasRequest\x1a\x16.google.protobuf.Empty\x12f\n" +
	"\rCreateContact\x120.com.seed.documents.v3alpha.CreateContactRequest\x1a#.com.seed.documents.v3alpha.Contact\x12`\n" +
	"\n" +
	"GetContact\x12-.com.seed.documents.v3alpha.GetContactRequest\x1a#.com.seed.documents.v3alpha.Contact\x12f\n" +
	"\rUpdateContact\x120.com.seed.documents.v3alpha.UpdateContactRequest\x1a#.com.seed.documents.v3alpha.Contact\x12Y\n" +
	"\rDeleteContact\x120.com.seed.documents.v3alpha.DeleteContactRequest\x1a\x16.google.protobuf.Empty\x12q\n" +
	"\fListContacts\x12/.com.seed.documents.v3alpha.ListContactsRequest\x1a0.com.seed.documents.v3alpha.ListContactsResponse\x12t\n" +
	"\rListDirectory\x120.com.seed.documents.v3alpha.ListDirectoryRequest\x1a1.com.seed.documents.v3alpha.ListDirectoryResponse\x12t\n" +
	"\rListDocuments\x120.com.seed.documents.v3alpha.ListDocumentsRequest\x1a1.com.seed.documents.v3alpha.ListDocumentsResponse\x12\x80\x01\n" +
	"\x11ListRootDocuments\x124.com.seed.documents.v3alpha.ListRootDocumentsRequest\x1a5.com.seed.documents.v3alpha.ListRootDocumentsResponse\x12\x86\x01\n" +
	"\x13ListDocumentChanges\x126.com.seed.documents.v3alpha.ListDocumentChangesRequest\x1a7.com.seed.documents.v3alpha.ListDocumentChangesResponse\x12y\n" +
	"\x11GetDocumentChange\x124.com.seed.documents.v3alpha.GetDocumentChangeRequest\x1a..com.seed.documents.v3alpha.DocumentChangeInfo\x12o\n" +
	"\x18UpdateDocumentReadStatus\x12;.com.seed.documents.v3alpha.UpdateDocumentReadStatusRequest\x1a\x16.google.protobuf.Empty\x12Z\n" +
	"\tCreateRef\x12,.com.seed.documents.v3alpha.CreateRefRequest\x1a\x1f.com.seed.documents.v3alpha.Ref\x12T\n" +
	"\x06GetRef\x12).com.seed.documents.v3alpha.GetRefRequest\x1a\x1f.com.seed.documents.v3alpha.RefB3Z1seed/backend/genproto/documents/v3alpha;documentsb\x06proto3"

var (
	file_documents_v3alpha_documents_proto_rawDescOnce sync.Once
	file_documents_v3alpha_documents_proto_rawDescData []byte
)

func file_documents_v3alpha_documents_proto_rawDescGZIP() []byte {
	file_documents_v3alpha_documents_proto_rawDescOnce.Do(func() {
		file_documents_v3alpha_documents_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_documents_v3alpha_documents_proto_rawDesc), len(file_documents_v3alpha_documents_proto_rawDesc)))
	})
	return file_documents_v3alpha_documents_proto_rawDescData
}

var file_documents_v3alpha_documents_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_documents_v3alpha_documents_proto_msgTypes = make([]protoimpl.MessageInfo, 54)
var file_documents_v3alpha_documents_proto_goTypes = []any{
	(SortAttribute)(0),                      // 0: com.seed.documents.v3alpha.SortAttribute
	(*GetDocumentRequest)(nil),              // 1: com.seed.documents.v3alpha.GetDocumentRequest
	(*RedirectErrorDetails)(nil),            // 2: com.seed.documents.v3alpha.RedirectErrorDetails
	(*CreateDocumentChangeRequest)(nil),     // 3: com.seed.documents.v3alpha.CreateDocumentChangeRequest
	(*DeleteDocumentRequest)(nil),           // 4: com.seed.documents.v3alpha.DeleteDocumentRequest
	(*ListRootDocumentsRequest)(nil),        // 5: com.seed.documents.v3alpha.ListRootDocumentsRequest
	(*ListRootDocumentsResponse)(nil),       // 6: com.seed.documents.v3alpha.ListRootDocumentsResponse
	(*ListAccountsRequest)(nil),             // 7: com.seed.documents.v3alpha.ListAccountsRequest
	(*ListAccountsResponse)(nil),            // 8: com.seed.documents.v3alpha.ListAccountsResponse
	(*GetAccountRequest)(nil),               // 9: com.seed.documents.v3alpha.GetAccountRequest
	(*BatchGetAccountsRequest)(nil),         // 10: com.seed.documents.v3alpha.BatchGetAccountsRequest
	(*BatchGetAccountsResponse)(nil),        // 11: com.seed.documents.v3alpha.BatchGetAccountsResponse
	(*UpdateProfileRequest)(nil),            // 12: com.seed.documents.v3alpha.UpdateProfileRequest
	(*Account)(nil),                         // 13: com.seed.documents.v3alpha.Account
	(*Profile)(nil),                         // 14: com.seed.documents.v3alpha.Profile
	(*CreateAliasRequest)(nil),              // 15: com.seed.documents.v3alpha.CreateAliasRequest
	(*CreateContactRequest)(nil),            // 16: com.seed.documents.v3alpha.CreateContactRequest
	(*GetContactRequest)(nil),               // 17: com.seed.documents.v3alpha.GetContactRequest
	(*UpdateContactRequest)(nil),            // 18: com.seed.documents.v3alpha.UpdateContactRequest
	(*DeleteContactRequest)(nil),            // 19: com.seed.documents.v3alpha.DeleteContactRequest
	(*ListContactsRequest)(nil),             // 20: com.seed.documents.v3alpha.ListContactsRequest
	(*ListContactsResponse)(nil),            // 21: com.seed.documents.v3alpha.ListContactsResponse
	(*Contact)(nil),                         // 22: com.seed.documents.v3alpha.Contact
	(*ListDirectoryRequest)(nil),            // 23: com.seed.documents.v3alpha.ListDirectoryRequest
	(*SortOptions)(nil),                     // 24: com.seed.documents.v3alpha.SortOptions
	(*ListDirectoryResponse)(nil),           // 25: com.seed.documents.v3alpha.ListDirectoryResponse
	(*ListDocumentsRequest)(nil),            // 26: com.seed.documents.v3alpha.ListDocumentsRequest
	(*ListDocumentsResponse)(nil),           // 27: com.seed.documents.v3alpha.ListDocumentsResponse
	(*ListDocumentChangesRequest)(nil),      // 28: com.seed.documents.v3alpha.ListDocumentChangesRequest
	(*ListDocumentChangesResponse)(nil),     // 29: com.seed.documents.v3alpha.ListDocumentChangesResponse
	(*GetDocumentChangeRequest)(nil),        // 30: com.seed.documents.v3alpha.GetDocumentChangeRequest
	(*UpdateDocumentReadStatusRequest)(nil), // 31: com.seed.documents.v3alpha.UpdateDocumentReadStatusRequest
	(*CreateRefRequest)(nil),                // 32: com.seed.documents.v3alpha.CreateRefRequest
	(*GetRefRequest)(nil),                   // 33: com.seed.documents.v3alpha.GetRefRequest
	(*DocumentChangeInfo)(nil),              // 34: com.seed.documents.v3alpha.DocumentChangeInfo
	(*DocumentInfo)(nil),                    // 35: com.seed.documents.v3alpha.DocumentInfo
	(*GenerationInfo)(nil),                  // 36: com.seed.documents.v3alpha.GenerationInfo
	(*ActivitySummary)(nil),                 // 37: com.seed.documents.v3alpha.ActivitySummary
	(*Breadcrumb)(nil),                      // 38: com.seed.documents.v3alpha.Breadcrumb
	(*Document)(nil),                        // 39: com.seed.documents.v3alpha.Document
	(*BlockNode)(nil),                       // 40: com.seed.documents.v3alpha.BlockNode
	(*Block)(nil),                           // 41: com.seed.documents.v3alpha.Block
	(*Annotation)(nil),                      // 42: com.seed.documents.v3alpha.Annotation
	(*DocumentChange)(nil),                  // 43: com.seed.documents.v3alpha.DocumentChange
	(*Ref)(nil),                             // 44: com.seed.documents.v3alpha.Ref
	(*RefTarget)(nil),                       // 45: com.seed.documents.v3alpha.RefTarget
	nil,                                     // 46: com.seed.documents.v3alpha.BatchGetAccountsResponse.AccountsEntry
	nil,                                     // 47: com.seed.documents.v3alpha.BatchGetAccountsResponse.ErrorsEntry
	nil,                                     // 48: com.seed.documents.v3alpha.Document.DetachedBlocksEntry
	(*DocumentChange_MoveBlock)(nil),        // 49: com.seed.documents.v3alpha.DocumentChange.MoveBlock
	(*DocumentChange_SetMetadata)(nil),      // 50: com.seed.documents.v3alpha.DocumentChange.SetMetadata
	(*DocumentChange_SetAttribute)(nil),     // 51: com.seed.documents.v3alpha.DocumentChange.SetAttribute
	(*RefTarget_Version)(nil),               // 52: com.seed.documents.v3alpha.RefTarget.Version
	(*RefTarget_Redirect)(nil),              // 53: com.seed.documents.v3alpha.RefTarget.Redirect
	(*RefTarget_Tombstone)(nil),             // 54: com.seed.documents.v3alpha.RefTarget.Tombstone
	(*timestamppb.Timestamp)(nil),           // 55: google.protobuf.Timestamp
	(*structpb.Struct)(nil),                 // 56: google.protobuf.Struct
	(*emptypb.Empty)(nil),                   // 57: google.protobuf.Empty
}
var file_documents_v3alpha_documents_proto_depIdxs = []int32{
	43, // 0: com.seed.documents.v3alpha.CreateDocumentChangeRequest.changes:type_name -> com.seed.documents.v3alpha.DocumentChange
	55, // 1: com.seed.documents.v3alpha.CreateDocumentChangeRequest.timestamp:type_name -> google.protobuf.Timestamp
	35, // 2: com.seed.documents.v3alpha.ListRootDocumentsResponse.documents:type_name -> com.seed.documents.v3alpha.DocumentInfo
	24, // 3: com.seed.documents.v3alpha.ListAccountsRequest.sort_options:type_name -> com.seed.documents.v3alpha.SortOptions
	13, // 4: com.seed.documents.v3alpha.ListAccountsResponse.accounts:type_name -> com.seed.documents.v3alpha.Account
	46, // 5: com.seed.documents.v3alpha.BatchGetAccountsResponse.accounts:type_name -> com.seed.documents.v3alpha.BatchGetAccountsResponse.AccountsEntry
	47, // 6: com.seed.documents.v3alpha.BatchGetAccountsResponse.errors:type_name -> com.seed.documents.v3alpha.BatchGetAccountsResponse.ErrorsEntry
	14, // 7: com.seed.documents.v3alpha.UpdateProfileRequest.profile:type_name -> com.seed.documents.v3alpha.Profile
	56, // 8: com.seed.documents.v3alpha.Account.metadata:type_name -> google.protobuf.Struct
	37, // 9: com.seed.documents.v3alpha.Account.activity_summary:type_name -> com.seed.documents.v3alpha.ActivitySummary
	14, // 10: com.seed.documents.v3alpha.Account.profile:type_name -> com.seed.documents.v3alpha.Profile
	55, // 11: com.seed.documents.v3alpha.Profile.update_time:type_name -> google.protobuf.Timestamp
	22, // 12: com.seed.documents.v3alpha.UpdateContactRequest.contact:type_name -> com.seed.documents.v3alpha.Contact
	22, // 13: com.seed.documents.v3alpha.ListContactsResponse.contacts:type_name -> com.seed.documents.v3alpha.Contact
	55, // 14: com.seed.documents.v3alpha.Contact.create_time:type_name -> google.protobuf.Timestamp
	55, // 15: com.seed.documents.v3alpha.Contact.update_time:type_name -> google.protobuf.Timestamp
	24, // 16: com.seed.documents.v3alpha.ListDirectoryRequest.sort_options:type_name -> com.seed.documents.v3alpha.SortOptions
	0,  // 17: com.seed.documents.v3alpha.SortOptions.attribute:type_name -> com.seed.documents.v3alpha.SortAttribute
	35, // 18: com.seed.documents.v3alpha.ListDirectoryResponse.documents:type_name -> com.seed.documents.v3alpha.DocumentInfo
	35, // 19: com.seed.documents.v3alpha.ListDocumentsResponse.documents:type_name -> com.seed.documents.v3alpha.DocumentInfo
	34, // 20: com.seed.documents.v3alpha.ListDocumentChangesResponse.changes:type_name -> com.seed.documents.v3alpha.DocumentChangeInfo
	45, // 21: com.seed.documents.v3alpha.CreateRefRequest.target:type_name -> com.seed.documents.v3alpha.RefTarget
	55, // 22: com.seed.documents.v3alpha.CreateRefRequest.timestamp:type_name -> google.protobuf.Timestamp
	55, // 23: com.seed.documents.v3alpha.DocumentChangeInfo.create_time:type_name -> google.protobuf.Timestamp
	56, // 24: com.seed.documents.v3alpha.DocumentInfo.metadata:type_name -> google.protobuf.Struct
	55, // 25: com.seed.documents.v3alpha.DocumentInfo.create_time:type_name -> google.protobuf.Timestamp
	55, // 26: com.seed.documents.v3alpha.DocumentInfo.update_time:type_name -> google.protobuf.Timestamp
	38, // 27: com.seed.documents.v3alpha.DocumentInfo.breadcrumbs:type_name -> com.seed.documents.v3alpha.Breadcrumb
	37, // 28: com.seed.documents.v3alpha.DocumentInfo.activity_summary:type_name -> com.seed.documents.v3alpha.ActivitySummary
	36, // 29: com.seed.documents.v3alpha.DocumentInfo.generation_info:type_name -> com.seed.documents.v3alpha.GenerationInfo
	55, // 30: com.seed.documents.v3alpha.ActivitySummary.latest_comment_time:type_name -> google.protobuf.Timestamp
	55, // 31: com.seed.documents.v3alpha.ActivitySummary.latest_change_time:type_name -> google.protobuf.Timestamp
	56, // 32: com.seed.documents.v3alpha.Document.metadata:type_name -> google.protobuf.Struct
	40, // 33: com.seed.documents.v3alpha.Document.content:type_name -> com.seed.documents.v3alpha.BlockNode
	48, // 34: com.seed.documents.v3alpha.Document.detached_blocks:type_name -> com.seed.documents.v3alpha.Document.DetachedBlocksEntry
	55, // 35: com.seed.documents.v3alpha.Document.create_time:type_name -> google.protobuf.Timestamp
	55, // 36: com.seed.documents.v3alpha.Document.update_time:type_name -> google.protobuf.Timestamp
	36, // 37: com.seed.documents.v3alpha.Document.generation_info:type_name -> com.seed.documents.v3alpha.GenerationInfo
	41, // 38: com.seed.documents.v3alpha.BlockNode.block:type_name -> com.seed.documents.v3alpha.Block
	40, // 39: com.seed.documents.v3alpha.BlockNode.children:type_name -> com.seed.documents.v3alpha.BlockNode
	56, // 40: com.seed.documents.v3alpha.Block.attributes:type_name -> google.protobuf.Struct
	42, // 41: com.seed.documents.v3alpha.Block.annotations:type_name -> com.seed.documents.v3alpha.Annotation
	56, // 42: com.seed.documents.v3alpha.Annotation.attributes:type_name -> google.protobuf.Struct
	50, // 43: com.seed.documents.v3alpha.DocumentChange.set_metadata:type_name -> com.seed.documents.v3alpha.DocumentChange.SetMetadata
	49, // 44: com.seed.documents.v3alpha.DocumentChange.move_block:type_name -> com.seed.documents.v3alpha.DocumentChange.MoveBlock
	41, // 45: com.seed.documents.v3alpha.DocumentChange.replace_block:type_name -> com.seed.documents.v3alpha.Block
	51, // 46: com.seed.documents.v3alpha.DocumentChange.set_attribute:type_name -> com.seed.documents.v3alpha.DocumentChange.SetAttribute
	45, // 47: com.seed.documents.v3alpha.Ref.target:type_name -> com.seed.documents.v3alpha.RefTarget
	55, // 48: com.seed.documents.v3alpha.Ref.timestamp:type_name -> google.protobuf.Timestamp
	36, // 49: com.seed.documents.v3alpha.Ref.generation_info:type_name -> com.seed.documents.v3alpha.GenerationInfo
	52, // 50: com.seed.documents.v3alpha.RefTarget.version:type_name -> com.seed.documents.v3alpha.RefTarget.Version
	53, // 51: com.seed.documents.v3alpha.RefTarget.redirect:type_name -> com.seed.documents.v3alpha.RefTarget.Redirect
	54, // 52: com.seed.documents.v3alpha.RefTarget.tombstone:type_name -> com.seed.documents.v3alpha.RefTarget.Tombstone
	13, // 53: com.seed.documents.v3alpha.BatchGetAccountsResponse.AccountsEntry.value:type_name -> com.seed.documents.v3alpha.Account
	40, // 54: com.seed.documents.v3alpha.Document.DetachedBlocksEntry.value:type_name -> com.seed.documents.v3alpha.BlockNode
	57, // 55: com.seed.documents.v3alpha.DocumentChange.SetAttribute.null_value:type_name -> google.protobuf.Empty
	1,  // 56: com.seed.documents.v3alpha.Documents.GetDocument:input_type -> com.seed.documents.v3alpha.GetDocumentRequest
	3,  // 57: com.seed.documents.v3alpha.Documents.CreateDocumentChange:input_type -> com.seed.documents.v3alpha.CreateDocumentChangeRequest
	4,  // 58: com.seed.documents.v3alpha.Documents.DeleteDocument:input_type -> com.seed.documents.v3alpha.DeleteDocumentRequest
	7,  // 59: com.seed.documents.v3alpha.Documents.ListAccounts:input_type -> com.seed.documents.v3alpha.ListAccountsRequest
	9,  // 60: com.seed.documents.v3alpha.Documents.GetAccount:input_type -> com.seed.documents.v3alpha.GetAccountRequest
	10, // 61: com.seed.documents.v3alpha.Documents.BatchGetAccounts:input_type -> com.seed.documents.v3alpha.BatchGetAccountsRequest
	12, // 62: com.seed.documents.v3alpha.Documents.UpdateProfile:input_type -> com.seed.documents.v3alpha.UpdateProfileRequest
	15, // 63: com.seed.documents.v3alpha.Documents.CreateAlias:input_type -> com.seed.documents.v3alpha.CreateAliasRequest
	16, // 64: com.seed.documents.v3alpha.Documents.CreateContact:input_type -> com.seed.documents.v3alpha.CreateContactRequest
	17, // 65: com.seed.documents.v3alpha.Documents.GetContact:input_type -> com.seed.documents.v3alpha.GetContactRequest
	18, // 66: com.seed.documents.v3alpha.Documents.UpdateContact:input_type -> com.seed.documents.v3alpha.UpdateContactRequest
	19, // 67: com.seed.documents.v3alpha.Documents.DeleteContact:input_type -> com.seed.documents.v3alpha.DeleteContactRequest
	20, // 68: com.seed.documents.v3alpha.Documents.ListContacts:input_type -> com.seed.documents.v3alpha.ListContactsRequest
	23, // 69: com.seed.documents.v3alpha.Documents.ListDirectory:input_type -> com.seed.documents.v3alpha.ListDirectoryRequest
	26, // 70: com.seed.documents.v3alpha.Documents.ListDocuments:input_type -> com.seed.documents.v3alpha.ListDocumentsRequest
	5,  // 71: com.seed.documents.v3alpha.Documents.ListRootDocuments:input_type -> com.seed.documents.v3alpha.ListRootDocumentsRequest
	28, // 72: com.seed.documents.v3alpha.Documents.ListDocumentChanges:input_type -> com.seed.documents.v3alpha.ListDocumentChangesRequest
	30, // 73: com.seed.documents.v3alpha.Documents.GetDocumentChange:input_type -> com.seed.documents.v3alpha.GetDocumentChangeRequest
	31, // 74: com.seed.documents.v3alpha.Documents.UpdateDocumentReadStatus:input_type -> com.seed.documents.v3alpha.UpdateDocumentReadStatusRequest
	32, // 75: com.seed.documents.v3alpha.Documents.CreateRef:input_type -> com.seed.documents.v3alpha.CreateRefRequest
	33, // 76: com.seed.documents.v3alpha.Documents.GetRef:input_type -> com.seed.documents.v3alpha.GetRefRequest
	39, // 77: com.seed.documents.v3alpha.Documents.GetDocument:output_type -> com.seed.documents.v3alpha.Document
	39, // 78: com.seed.documents.v3alpha.Documents.CreateDocumentChange:output_type -> com.seed.documents.v3alpha.Document
	57, // 79: com.seed.documents.v3alpha.Documents.DeleteDocument:output_type -> google.protobuf.Empty
	8,  // 80: com.seed.documents.v3alpha.Documents.ListAccounts:output_type -> com.seed.documents.v3alpha.ListAccountsResponse
	13, // 81: com.seed.documents.v3alpha.Documents.GetAccount:output_type -> com.seed.documents.v3alpha.Account
	11, // 82: com.seed.documents.v3alpha.Documents.BatchGetAccounts:output_type -> com.seed.documents.v3alpha.BatchGetAccountsResponse
	13, // 83: com.seed.documents.v3alpha.Documents.UpdateProfile:output_type -> com.seed.documents.v3alpha.Account
	57, // 84: com.seed.documents.v3alpha.Documents.CreateAlias:output_type -> google.protobuf.Empty
	22, // 85: com.seed.documents.v3alpha.Documents.CreateContact:output_type -> com.seed.documents.v3alpha.Contact
	22, // 86: com.seed.documents.v3alpha.Documents.GetContact:output_type -> com.seed.documents.v3alpha.Contact
	22, // 87: com.seed.documents.v3alpha.Documents.UpdateContact:output_type -> com.seed.documents.v3alpha.Contact
	57, // 88: com.seed.documents.v3alpha.Documents.DeleteContact:output_type -> google.protobuf.Empty
	21, // 89: com.seed.documents.v3alpha.Documents.ListContacts:output_type -> com.seed.documents.v3alpha.ListContactsResponse
	25, // 90: com.seed.documents.v3alpha.Documents.ListDirectory:output_type -> com.seed.documents.v3alpha.ListDirectoryResponse
	27, // 91: com.seed.documents.v3alpha.Documents.ListDocuments:output_type -> com.seed.documents.v3alpha.ListDocumentsResponse
	6,  // 92: com.seed.documents.v3alpha.Documents.ListRootDocuments:output_type -> com.seed.documents.v3alpha.ListRootDocumentsResponse
	29, // 93: com.seed.documents.v3alpha.Documents.ListDocumentChanges:output_type -> com.seed.documents.v3alpha.ListDocumentChangesResponse
	34, // 94: com.seed.documents.v3alpha.Documents.GetDocumentChange:output_type -> com.seed.documents.v3alpha.DocumentChangeInfo
	57, // 95: com.seed.documents.v3alpha.Documents.UpdateDocumentReadStatus:output_type -> google.protobuf.Empty
	44, // 96: com.seed.documents.v3alpha.Documents.CreateRef:output_type -> com.seed.documents.v3alpha.Ref
	44, // 97: com.seed.documents.v3alpha.Documents.GetRef:output_type -> com.seed.documents.v3alpha.Ref
	77, // [77:98] is the sub-list for method output_type
	56, // [56:77] is the sub-list for method input_type
	56, // [56:56] is the sub-list for extension type_name
	56, // [56:56] is the sub-list for extension extendee
	0,  // [0:56] is the sub-list for field type_name
}

func init() { file_documents_v3alpha_documents_proto_init() }
func file_documents_v3alpha_documents_proto_init() {
	if File_documents_v3alpha_documents_proto != nil {
		return
	}
	file_documents_v3alpha_documents_proto_msgTypes[19].OneofWrappers = []any{
		(*ListContactsRequest_Account)(nil),
		(*ListContactsRequest_Subject)(nil),
	}
	file_documents_v3alpha_documents_proto_msgTypes[42].OneofWrappers = []any{
		(*DocumentChange_SetMetadata_)(nil),
		(*DocumentChange_MoveBlock_)(nil),
		(*DocumentChange_ReplaceBlock)(nil),
		(*DocumentChange_DeleteBlock)(nil),
		(*DocumentChange_SetAttribute_)(nil),
	}
	file_documents_v3alpha_documents_proto_msgTypes[44].OneofWrappers = []any{
		(*RefTarget_Version_)(nil),
		(*RefTarget_Redirect_)(nil),
		(*RefTarget_Tombstone_)(nil),
	}
	file_documents_v3alpha_documents_proto_msgTypes[50].OneofWrappers = []any{
		(*DocumentChange_SetAttribute_StringValue)(nil),
		(*DocumentChange_SetAttribute_IntValue)(nil),
		(*DocumentChange_SetAttribute_BoolValue)(nil),
		(*DocumentChange_SetAttribute_NullValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_documents_v3alpha_documents_proto_rawDesc), len(file_documents_v3alpha_documents_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   54,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_documents_v3alpha_documents_proto_goTypes,
		DependencyIndexes: file_documents_v3alpha_documents_proto_depIdxs,
		EnumInfos:         file_documents_v3alpha_documents_proto_enumTypes,
		MessageInfos:      file_documents_v3alpha_documents_proto_msgTypes,
	}.Build()
	File_documents_v3alpha_documents_proto = out.File
	file_documents_v3alpha_documents_proto_goTypes = nil
	file_documents_v3alpha_documents_proto_depIdxs = nil
}
