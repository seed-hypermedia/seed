// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.24.4
// source: entities/v1alpha/entities.proto

package entities

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to get a change by ID.
type GetChangeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the change.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChangeRequest) Reset() {
	*x = GetChangeRequest{}
	mi := &file_entities_v1alpha_entities_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChangeRequest) ProtoMessage() {}

func (x *GetChangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entities_v1alpha_entities_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChangeRequest.ProtoReflect.Descriptor instead.
func (*GetChangeRequest) Descriptor() ([]byte, []int) {
	return file_entities_v1alpha_entities_proto_rawDescGZIP(), []int{0}
}

func (x *GetChangeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Request to get the timeline of an entity.
type GetEntityTimelineRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The entity ID to get the timeline for.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Flag to include draft changes in the timeline,
	// otherwise they are omitted by default.
	IncludeDrafts bool `protobuf:"varint,2,opt,name=include_drafts,json=includeDrafts,proto3" json:"include_drafts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEntityTimelineRequest) Reset() {
	*x = GetEntityTimelineRequest{}
	mi := &file_entities_v1alpha_entities_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEntityTimelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntityTimelineRequest) ProtoMessage() {}

func (x *GetEntityTimelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entities_v1alpha_entities_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntityTimelineRequest.ProtoReflect.Descriptor instead.
func (*GetEntityTimelineRequest) Descriptor() ([]byte, []int) {
	return file_entities_v1alpha_entities_proto_rawDescGZIP(), []int{1}
}

func (x *GetEntityTimelineRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetEntityTimelineRequest) GetIncludeDrafts() bool {
	if x != nil {
		return x.IncludeDrafts
	}
	return false
}

// Request to discover an entity.
type DiscoverEntityRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The account the entity belongs to.
	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// Required. The path of the wanted entity.
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// Optional. Version of the entity to discover.
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// Optional. If true, we sync the document and the child
	// documents as well.
	Recursive     bool `protobuf:"varint,4,opt,name=recursive,proto3" json:"recursive,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiscoverEntityRequest) Reset() {
	*x = DiscoverEntityRequest{}
	mi := &file_entities_v1alpha_entities_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoverEntityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverEntityRequest) ProtoMessage() {}

func (x *DiscoverEntityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entities_v1alpha_entities_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverEntityRequest.ProtoReflect.Descriptor instead.
func (*DiscoverEntityRequest) Descriptor() ([]byte, []int) {
	return file_entities_v1alpha_entities_proto_rawDescGZIP(), []int{2}
}

func (x *DiscoverEntityRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *DiscoverEntityRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DiscoverEntityRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DiscoverEntityRequest) GetRecursive() bool {
	if x != nil {
		return x.Recursive
	}
	return false
}

// Response to discover an entity.
type DiscoverEntityResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The version of the document we have found
	Version       string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiscoverEntityResponse) Reset() {
	*x = DiscoverEntityResponse{}
	mi := &file_entities_v1alpha_entities_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoverEntityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverEntityResponse) ProtoMessage() {}

func (x *DiscoverEntityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entities_v1alpha_entities_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverEntityResponse.ProtoReflect.Descriptor instead.
func (*DiscoverEntityResponse) Descriptor() ([]byte, []int) {
	return file_entities_v1alpha_entities_proto_rawDescGZIP(), []int{3}
}

func (x *DiscoverEntityResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// A change to an entity.
type Change struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the change.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Author of the change.
	Author string `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	// Timestamp when the change was created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// IDs of other changes this change depends on.
	Deps []string `protobuf:"bytes,4,rep,name=deps,proto3" json:"deps,omitempty"`
	// IDs of other changes that depend on this change.
	Children []string `protobuf:"bytes,6,rep,name=children,proto3" json:"children,omitempty"`
	// Indicates whether this changes comes from a trusted peer of ours.
	IsTrusted bool `protobuf:"varint,5,opt,name=is_trusted,json=isTrusted,proto3" json:"is_trusted,omitempty"`
	// Indicates whether this change is a draft.
	IsDraft       bool `protobuf:"varint,7,opt,name=is_draft,json=isDraft,proto3" json:"is_draft,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Change) Reset() {
	*x = Change{}
	mi := &file_entities_v1alpha_entities_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Change) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Change) ProtoMessage() {}

func (x *Change) ProtoReflect() protoreflect.Message {
	mi := &file_entities_v1alpha_entities_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Change.ProtoReflect.Descriptor instead.
func (*Change) Descriptor() ([]byte, []int) {
	return file_entities_v1alpha_entities_proto_rawDescGZIP(), []int{4}
}

func (x *Change) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Change) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *Change) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Change) GetDeps() []string {
	if x != nil {
		return x.Deps
	}
	return nil
}

func (x *Change) GetChildren() []string {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *Change) GetIsTrusted() bool {
	if x != nil {
		return x.IsTrusted
	}
	return false
}

func (x *Change) GetIsDraft() bool {
	if x != nil {
		return x.IsDraft
	}
	return false
}

// The timeline of an entity.
type EntityTimeline struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the entity.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Account ID of the owner of the entity.
	Owner string `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	// The set of changes for the entity keyed by change ID.
	Changes map[string]*Change `protobuf:"bytes,3,rep,name=changes,proto3" json:"changes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// The sorted list of change IDs by time.
	ChangesByTime []string `protobuf:"bytes,4,rep,name=changes_by_time,json=changesByTime,proto3" json:"changes_by_time,omitempty"`
	// The set of changes that has no dependencies.
	// Normally there should only be one root,
	// but just in case it's defined as a list.
	Roots []string `protobuf:"bytes,5,rep,name=roots,proto3" json:"roots,omitempty"`
	// The set of leaf changes considering the entire DAG.
	Heads []string `protobuf:"bytes,6,rep,name=heads,proto3" json:"heads,omitempty"`
	// The set of author versions/variants sorted by timestamp.
	AuthorVersions []*AuthorVersion `protobuf:"bytes,7,rep,name=author_versions,json=authorVersions,proto3" json:"author_versions,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *EntityTimeline) Reset() {
	*x = EntityTimeline{}
	mi := &file_entities_v1alpha_entities_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntityTimeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityTimeline) ProtoMessage() {}

func (x *EntityTimeline) ProtoReflect() protoreflect.Message {
	mi := &file_entities_v1alpha_entities_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityTimeline.ProtoReflect.Descriptor instead.
func (*EntityTimeline) Descriptor() ([]byte, []int) {
	return file_entities_v1alpha_entities_proto_rawDescGZIP(), []int{5}
}

func (x *EntityTimeline) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EntityTimeline) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *EntityTimeline) GetChanges() map[string]*Change {
	if x != nil {
		return x.Changes
	}
	return nil
}

func (x *EntityTimeline) GetChangesByTime() []string {
	if x != nil {
		return x.ChangesByTime
	}
	return nil
}

func (x *EntityTimeline) GetRoots() []string {
	if x != nil {
		return x.Roots
	}
	return nil
}

func (x *EntityTimeline) GetHeads() []string {
	if x != nil {
		return x.Heads
	}
	return nil
}

func (x *EntityTimeline) GetAuthorVersions() []*AuthorVersion {
	if x != nil {
		return x.AuthorVersions
	}
	return nil
}

// Set of heads from a given author.
type AuthorVersion struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Account ID of the author.
	Author string `protobuf:"bytes,1,opt,name=author,proto3" json:"author,omitempty"`
	// The set of leaf changes from that author.
	Heads []string `protobuf:"bytes,2,rep,name=heads,proto3" json:"heads,omitempty"`
	// The version string corresponding to the author's variant.
	// I.e. same as heads but concatenated with a '.' delimiter.
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// The timestamp of the author's version.
	// For compound versions the greatest timestamp is used.
	VersionTime   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=version_time,json=versionTime,proto3" json:"version_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthorVersion) Reset() {
	*x = AuthorVersion{}
	mi := &file_entities_v1alpha_entities_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorVersion) ProtoMessage() {}

func (x *AuthorVersion) ProtoReflect() protoreflect.Message {
	mi := &file_entities_v1alpha_entities_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorVersion.ProtoReflect.Descriptor instead.
func (*AuthorVersion) Descriptor() ([]byte, []int) {
	return file_entities_v1alpha_entities_proto_rawDescGZIP(), []int{6}
}

func (x *AuthorVersion) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *AuthorVersion) GetHeads() []string {
	if x != nil {
		return x.Heads
	}
	return nil
}

func (x *AuthorVersion) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AuthorVersion) GetVersionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.VersionTime
	}
	return nil
}

// An entity record found
type Entity struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// EID of the entity.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Content of the entity, depending on the type:
	// Alias in the case of account.
	// Title/Body in the case of groups and documents.
	// Body in the case of comments.
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	// where the matching string is found in the content.
	// This is a char offset in the content.
	MatchOffset int32 `protobuf:"varint,3,opt,name=match_offset,json=matchOffset,proto3" json:"match_offset,omitempty"`
	// The owner of the entity
	Owner string `protobuf:"bytes,4,opt,name=owner,proto3" json:"owner,omitempty"`
	// Icon of the document containing that entity
	Icon string `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`
	// Parent document names
	ParentNames   []string `protobuf:"bytes,6,rep,name=parent_names,json=parentNames,proto3" json:"parent_names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Entity) Reset() {
	*x = Entity{}
	mi := &file_entities_v1alpha_entities_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Entity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entity) ProtoMessage() {}

func (x *Entity) ProtoReflect() protoreflect.Message {
	mi := &file_entities_v1alpha_entities_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entity.ProtoReflect.Descriptor instead.
func (*Entity) Descriptor() ([]byte, []int) {
	return file_entities_v1alpha_entities_proto_rawDescGZIP(), []int{7}
}

func (x *Entity) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Entity) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Entity) GetMatchOffset() int32 {
	if x != nil {
		return x.MatchOffset
	}
	return 0
}

func (x *Entity) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *Entity) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Entity) GetParentNames() []string {
	if x != nil {
		return x.ParentNames
	}
	return nil
}

// Publication that has been deleted
type DeletedEntity struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// EID of the deleted entity.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// When the entity was deleted.
	DeleteTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=delete_time,json=deleteTime,proto3" json:"delete_time,omitempty"`
	// Reason why this entity was deleted.
	DeletedReason string `protobuf:"bytes,3,opt,name=deleted_reason,json=deletedReason,proto3" json:"deleted_reason,omitempty"`
	// Further metadata about the deleted entity, title, etc ...
	Metadata      string `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletedEntity) Reset() {
	*x = DeletedEntity{}
	mi := &file_entities_v1alpha_entities_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletedEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletedEntity) ProtoMessage() {}

func (x *DeletedEntity) ProtoReflect() protoreflect.Message {
	mi := &file_entities_v1alpha_entities_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletedEntity.ProtoReflect.Descriptor instead.
func (*DeletedEntity) Descriptor() ([]byte, []int) {
	return file_entities_v1alpha_entities_proto_rawDescGZIP(), []int{8}
}

func (x *DeletedEntity) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeletedEntity) GetDeleteTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DeleteTime
	}
	return nil
}

func (x *DeletedEntity) GetDeletedReason() string {
	if x != nil {
		return x.DeletedReason
	}
	return ""
}

func (x *DeletedEntity) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

// Request to
type SearchEntitiesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Query to find. We Ssupport wildcards and prhases.
	// See https://sqlite.org/fts5.html#full_text_query_syntax.
	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// Whether to look into all content available or just the titles.
	// If false, comments are not included in the search.
	// Default is false.
	IncludeBody bool `protobuf:"varint,2,opt,name=include_body,json=includeBody,proto3" json:"include_body,omitempty"`
	// Whether to look into latest versions only or lookk into full.
	// history of the entity. Default is false.
	FullHystory   bool `protobuf:"varint,3,opt,name=full_hystory,json=fullHystory,proto3" json:"full_hystory,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchEntitiesRequest) Reset() {
	*x = SearchEntitiesRequest{}
	mi := &file_entities_v1alpha_entities_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchEntitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchEntitiesRequest) ProtoMessage() {}

func (x *SearchEntitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entities_v1alpha_entities_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchEntitiesRequest.ProtoReflect.Descriptor instead.
func (*SearchEntitiesRequest) Descriptor() ([]byte, []int) {
	return file_entities_v1alpha_entities_proto_rawDescGZIP(), []int{9}
}

func (x *SearchEntitiesRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchEntitiesRequest) GetIncludeBody() bool {
	if x != nil {
		return x.IncludeBody
	}
	return false
}

func (x *SearchEntitiesRequest) GetFullHystory() bool {
	if x != nil {
		return x.FullHystory
	}
	return false
}

// A list of entities matching the request.
type SearchEntitiesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Entities matching the input title
	Entities []*Entity `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
	// Token for the next page if there's any.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchEntitiesResponse) Reset() {
	*x = SearchEntitiesResponse{}
	mi := &file_entities_v1alpha_entities_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchEntitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchEntitiesResponse) ProtoMessage() {}

func (x *SearchEntitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entities_v1alpha_entities_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchEntitiesResponse.ProtoReflect.Descriptor instead.
func (*SearchEntitiesResponse) Descriptor() ([]byte, []int) {
	return file_entities_v1alpha_entities_proto_rawDescGZIP(), []int{10}
}

func (x *SearchEntitiesResponse) GetEntities() []*Entity {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *SearchEntitiesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// Request for deleting an entity.
type DeleteEntityRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Entity ID of the entity to be removed.
	// All versions will also be removed.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Optional. Reason why the user wants to delete that entity.
	Reason        string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteEntityRequest) Reset() {
	*x = DeleteEntityRequest{}
	mi := &file_entities_v1alpha_entities_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEntityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEntityRequest) ProtoMessage() {}

func (x *DeleteEntityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entities_v1alpha_entities_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEntityRequest.ProtoReflect.Descriptor instead.
func (*DeleteEntityRequest) Descriptor() ([]byte, []int) {
	return file_entities_v1alpha_entities_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteEntityRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteEntityRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// Request for listing deleted entities.
type ListDeletedEntitiesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. Number of results per page. Default is defined by the server.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional. Value from next_page_token obtains from a previous response.
	PageToken     string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDeletedEntitiesRequest) Reset() {
	*x = ListDeletedEntitiesRequest{}
	mi := &file_entities_v1alpha_entities_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDeletedEntitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeletedEntitiesRequest) ProtoMessage() {}

func (x *ListDeletedEntitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entities_v1alpha_entities_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeletedEntitiesRequest.ProtoReflect.Descriptor instead.
func (*ListDeletedEntitiesRequest) Descriptor() ([]byte, []int) {
	return file_entities_v1alpha_entities_proto_rawDescGZIP(), []int{12}
}

func (x *ListDeletedEntitiesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListDeletedEntitiesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// Response with list of deleted entities.
type ListDeletedEntitiesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of deleted entities.
	DeletedEntities []*DeletedEntity `protobuf:"bytes,1,rep,name=deleted_entities,json=deletedEntities,proto3" json:"deleted_entities,omitempty"`
	// Token for the next page if there're more results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDeletedEntitiesResponse) Reset() {
	*x = ListDeletedEntitiesResponse{}
	mi := &file_entities_v1alpha_entities_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDeletedEntitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDeletedEntitiesResponse) ProtoMessage() {}

func (x *ListDeletedEntitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entities_v1alpha_entities_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDeletedEntitiesResponse.ProtoReflect.Descriptor instead.
func (*ListDeletedEntitiesResponse) Descriptor() ([]byte, []int) {
	return file_entities_v1alpha_entities_proto_rawDescGZIP(), []int{13}
}

func (x *ListDeletedEntitiesResponse) GetDeletedEntities() []*DeletedEntity {
	if x != nil {
		return x.DeletedEntities
	}
	return nil
}

func (x *ListDeletedEntitiesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// Request for restoring an entity.
type UndeleteEntityRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Entity ID of the entity to be restored.
	// All versions will also be restored.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UndeleteEntityRequest) Reset() {
	*x = UndeleteEntityRequest{}
	mi := &file_entities_v1alpha_entities_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UndeleteEntityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UndeleteEntityRequest) ProtoMessage() {}

func (x *UndeleteEntityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entities_v1alpha_entities_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UndeleteEntityRequest.ProtoReflect.Descriptor instead.
func (*UndeleteEntityRequest) Descriptor() ([]byte, []int) {
	return file_entities_v1alpha_entities_proto_rawDescGZIP(), []int{14}
}

func (x *UndeleteEntityRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Request to list mentions of an entity.
type ListEntityMentionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. ID of the entity to list mentions for.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Optional. The size of the page to return by the server.
	// The server may ignore this, and return a bigger response.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional. The page token to continue the pagination.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Optional. Whether to return the results in descending order (newest-first).
	// By default mentions are listed in the chronological order,
	// according to the *locally perceived* order of the blobs that contain the mentions.
	//
	// I.e. we sort the links according to the time we receive the blobs, not according to the time blobs claim to have been created.
	// This is to prevent losing new mentions in case of receiving out-of-date blobs.
	//
	// This flag must remain the same when paginating through the results.
	ReverseOrder  bool `protobuf:"varint,4,opt,name=reverse_order,json=reverseOrder,proto3" json:"reverse_order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEntityMentionsRequest) Reset() {
	*x = ListEntityMentionsRequest{}
	mi := &file_entities_v1alpha_entities_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEntityMentionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEntityMentionsRequest) ProtoMessage() {}

func (x *ListEntityMentionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entities_v1alpha_entities_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEntityMentionsRequest.ProtoReflect.Descriptor instead.
func (*ListEntityMentionsRequest) Descriptor() ([]byte, []int) {
	return file_entities_v1alpha_entities_proto_rawDescGZIP(), []int{15}
}

func (x *ListEntityMentionsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ListEntityMentionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListEntityMentionsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListEntityMentionsRequest) GetReverseOrder() bool {
	if x != nil {
		return x.ReverseOrder
	}
	return false
}

// Response to list mentions of an entity.
type ListEntityMentionsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The list of mentions for the entity.
	Mentions []*Mention `protobuf:"bytes,1,rep,name=mentions,proto3" json:"mentions,omitempty"`
	// Optional. Token for the next page if there's any.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEntityMentionsResponse) Reset() {
	*x = ListEntityMentionsResponse{}
	mi := &file_entities_v1alpha_entities_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEntityMentionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEntityMentionsResponse) ProtoMessage() {}

func (x *ListEntityMentionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entities_v1alpha_entities_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEntityMentionsResponse.ProtoReflect.Descriptor instead.
func (*ListEntityMentionsResponse) Descriptor() ([]byte, []int) {
	return file_entities_v1alpha_entities_proto_rawDescGZIP(), []int{16}
}

func (x *ListEntityMentionsResponse) GetMentions() []*Mention {
	if x != nil {
		return x.Mentions
	}
	return nil
}

func (x *ListEntityMentionsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// Mention of an Entity.
// Source means the place where the mention was found.
// Target means the entity being mentioned.
type Mention struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The source blob where the mention was found.
	Source string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	// Required. The Type of the source where the mention was found.
	SourceType string `protobuf:"bytes,2,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`
	// Required. Context can mean different things depending on the type of the source:
	// it can be the block ID when source type is a Document or Comment,
	// it can be a pretty-path when source type is a Group that mentions a Document.
	SourceContext string `protobuf:"bytes,3,opt,name=source_context,json=sourceContext,proto3" json:"source_context,omitempty"`
	// Required. Information about the blob where the mention was found.
	SourceBlob *Mention_BlobInfo `protobuf:"bytes,4,opt,name=source_blob,json=sourceBlob,proto3" json:"source_blob,omitempty"`
	// Required. Specifies whether the link points to the exact/pinned version of the target document,
	// or if the target version is a *suggested* minimum version, and a later one should be preferred if exists.
	IsExactVersion bool `protobuf:"varint,5,opt,name=is_exact_version,json=isExactVersion,proto3" json:"is_exact_version,omitempty"`
	// Optional. Specifies the document where the mention was found. Relevant for comments.
	SourceDocument string `protobuf:"bytes,6,opt,name=source_document,json=sourceDocument,proto3" json:"source_document,omitempty"`
	// Optional. The version of the target Entity the link points to,
	// if one is specified in the link.
	TargetVersion string `protobuf:"bytes,7,opt,name=target_version,json=targetVersion,proto3" json:"target_version,omitempty"`
	// Optional. The fragment portion of the link.
	TargetFragment string `protobuf:"bytes,8,opt,name=target_fragment,json=targetFragment,proto3" json:"target_fragment,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Mention) Reset() {
	*x = Mention{}
	mi := &file_entities_v1alpha_entities_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mention) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mention) ProtoMessage() {}

func (x *Mention) ProtoReflect() protoreflect.Message {
	mi := &file_entities_v1alpha_entities_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mention.ProtoReflect.Descriptor instead.
func (*Mention) Descriptor() ([]byte, []int) {
	return file_entities_v1alpha_entities_proto_rawDescGZIP(), []int{17}
}

func (x *Mention) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Mention) GetSourceType() string {
	if x != nil {
		return x.SourceType
	}
	return ""
}

func (x *Mention) GetSourceContext() string {
	if x != nil {
		return x.SourceContext
	}
	return ""
}

func (x *Mention) GetSourceBlob() *Mention_BlobInfo {
	if x != nil {
		return x.SourceBlob
	}
	return nil
}

func (x *Mention) GetIsExactVersion() bool {
	if x != nil {
		return x.IsExactVersion
	}
	return false
}

func (x *Mention) GetSourceDocument() string {
	if x != nil {
		return x.SourceDocument
	}
	return ""
}

func (x *Mention) GetTargetVersion() string {
	if x != nil {
		return x.TargetVersion
	}
	return ""
}

func (x *Mention) GetTargetFragment() string {
	if x != nil {
		return x.TargetFragment
	}
	return ""
}

// Information about a structural blob that contains the mention.
type Mention_BlobInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The CID-formatted hash of the blob.
	Cid string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	// The Account ID of the author of the blob.
	Author string `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	// The timestamp of the blob.
	CreateTime    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Mention_BlobInfo) Reset() {
	*x = Mention_BlobInfo{}
	mi := &file_entities_v1alpha_entities_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mention_BlobInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mention_BlobInfo) ProtoMessage() {}

func (x *Mention_BlobInfo) ProtoReflect() protoreflect.Message {
	mi := &file_entities_v1alpha_entities_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mention_BlobInfo.ProtoReflect.Descriptor instead.
func (*Mention_BlobInfo) Descriptor() ([]byte, []int) {
	return file_entities_v1alpha_entities_proto_rawDescGZIP(), []int{17, 0}
}

func (x *Mention_BlobInfo) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *Mention_BlobInfo) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *Mention_BlobInfo) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

var File_entities_v1alpha_entities_proto protoreflect.FileDescriptor

const file_entities_v1alpha_entities_proto_rawDesc = "" +
	"\n" +
	"\x1fentities/v1alpha/entities.proto\x12\x19com.seed.entities.v1alpha\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\"\"\n" +
	"\x10GetChangeRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"Q\n" +
	"\x18GetEntityTimelineRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12%\n" +
	"\x0einclude_drafts\x18\x02 \x01(\bR\rincludeDrafts\"}\n" +
	"\x15DiscoverEntityRequest\x12\x18\n" +
	"\aaccount\x18\x01 \x01(\tR\aaccount\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12\x1c\n" +
	"\trecursive\x18\x04 \x01(\bR\trecursive\"2\n" +
	"\x16DiscoverEntityResponse\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\"\xd7\x01\n" +
	"\x06Change\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06author\x18\x02 \x01(\tR\x06author\x12;\n" +
	"\vcreate_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime\x12\x12\n" +
	"\x04deps\x18\x04 \x03(\tR\x04deps\x12\x1a\n" +
	"\bchildren\x18\x06 \x03(\tR\bchildren\x12\x1d\n" +
	"\n" +
	"is_trusted\x18\x05 \x01(\bR\tisTrusted\x12\x19\n" +
	"\bis_draft\x18\a \x01(\bR\aisDraft\"\x8e\x03\n" +
	"\x0eEntityTimeline\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05owner\x18\x02 \x01(\tR\x05owner\x12P\n" +
	"\achanges\x18\x03 \x03(\v26.com.seed.entities.v1alpha.EntityTimeline.ChangesEntryR\achanges\x12&\n" +
	"\x0fchanges_by_time\x18\x04 \x03(\tR\rchangesByTime\x12\x14\n" +
	"\x05roots\x18\x05 \x03(\tR\x05roots\x12\x14\n" +
	"\x05heads\x18\x06 \x03(\tR\x05heads\x12Q\n" +
	"\x0fauthor_versions\x18\a \x03(\v2(.com.seed.entities.v1alpha.AuthorVersionR\x0eauthorVersions\x1a]\n" +
	"\fChangesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x127\n" +
	"\x05value\x18\x02 \x01(\v2!.com.seed.entities.v1alpha.ChangeR\x05value:\x028\x01\"\x96\x01\n" +
	"\rAuthorVersion\x12\x16\n" +
	"\x06author\x18\x01 \x01(\tR\x06author\x12\x14\n" +
	"\x05heads\x18\x02 \x03(\tR\x05heads\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12=\n" +
	"\fversion_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\vversionTime\"\xa2\x01\n" +
	"\x06Entity\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12!\n" +
	"\fmatch_offset\x18\x03 \x01(\x05R\vmatchOffset\x12\x14\n" +
	"\x05owner\x18\x04 \x01(\tR\x05owner\x12\x12\n" +
	"\x04icon\x18\x05 \x01(\tR\x04icon\x12!\n" +
	"\fparent_names\x18\x06 \x03(\tR\vparentNames\"\x9f\x01\n" +
	"\rDeletedEntity\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12;\n" +
	"\vdelete_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"deleteTime\x12%\n" +
	"\x0edeleted_reason\x18\x03 \x01(\tR\rdeletedReason\x12\x1a\n" +
	"\bmetadata\x18\x04 \x01(\tR\bmetadata\"s\n" +
	"\x15SearchEntitiesRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x12!\n" +
	"\finclude_body\x18\x02 \x01(\bR\vincludeBody\x12!\n" +
	"\ffull_hystory\x18\x03 \x01(\bR\vfullHystory\"\x7f\n" +
	"\x16SearchEntitiesResponse\x12=\n" +
	"\bentities\x18\x01 \x03(\v2!.com.seed.entities.v1alpha.EntityR\bentities\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"=\n" +
	"\x13DeleteEntityRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"X\n" +
	"\x1aListDeletedEntitiesRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\"\x9a\x01\n" +
	"\x1bListDeletedEntitiesResponse\x12S\n" +
	"\x10deleted_entities\x18\x01 \x03(\v2(.com.seed.entities.v1alpha.DeletedEntityR\x0fdeletedEntities\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"'\n" +
	"\x15UndeleteEntityRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x8c\x01\n" +
	"\x19ListEntityMentionsRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\x12#\n" +
	"\rreverse_order\x18\x04 \x01(\bR\freverseOrder\"\x84\x01\n" +
	"\x1aListEntityMentionsResponse\x12>\n" +
	"\bmentions\x18\x01 \x03(\v2\".com.seed.entities.v1alpha.MentionR\bmentions\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\xcd\x03\n" +
	"\aMention\x12\x16\n" +
	"\x06source\x18\x01 \x01(\tR\x06source\x12\x1f\n" +
	"\vsource_type\x18\x02 \x01(\tR\n" +
	"sourceType\x12%\n" +
	"\x0esource_context\x18\x03 \x01(\tR\rsourceContext\x12L\n" +
	"\vsource_blob\x18\x04 \x01(\v2+.com.seed.entities.v1alpha.Mention.BlobInfoR\n" +
	"sourceBlob\x12(\n" +
	"\x10is_exact_version\x18\x05 \x01(\bR\x0eisExactVersion\x12'\n" +
	"\x0fsource_document\x18\x06 \x01(\tR\x0esourceDocument\x12%\n" +
	"\x0etarget_version\x18\a \x01(\tR\rtargetVersion\x12'\n" +
	"\x0ftarget_fragment\x18\b \x01(\tR\x0etargetFragment\x1aq\n" +
	"\bBlobInfo\x12\x10\n" +
	"\x03cid\x18\x01 \x01(\tR\x03cid\x12\x16\n" +
	"\x06author\x18\x02 \x01(\tR\x06author\x12;\n" +
	"\vcreate_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime2\x89\a\n" +
	"\bEntities\x12[\n" +
	"\tGetChange\x12+.com.seed.entities.v1alpha.GetChangeRequest\x1a!.com.seed.entities.v1alpha.Change\x12s\n" +
	"\x11GetEntityTimeline\x123.com.seed.entities.v1alpha.GetEntityTimelineRequest\x1a).com.seed.entities.v1alpha.EntityTimeline\x12u\n" +
	"\x0eDiscoverEntity\x120.com.seed.entities.v1alpha.DiscoverEntityRequest\x1a1.com.seed.entities.v1alpha.DiscoverEntityResponse\x12u\n" +
	"\x0eSearchEntities\x120.com.seed.entities.v1alpha.SearchEntitiesRequest\x1a1.com.seed.entities.v1alpha.SearchEntitiesResponse\x12V\n" +
	"\fDeleteEntity\x12..com.seed.entities.v1alpha.DeleteEntityRequest\x1a\x16.google.protobuf.Empty\x12\x84\x01\n" +
	"\x13ListDeletedEntities\x125.com.seed.entities.v1alpha.ListDeletedEntitiesRequest\x1a6.com.seed.entities.v1alpha.ListDeletedEntitiesResponse\x12Z\n" +
	"\x0eUndeleteEntity\x120.com.seed.entities.v1alpha.UndeleteEntityRequest\x1a\x16.google.protobuf.Empty\x12\x81\x01\n" +
	"\x12ListEntityMentions\x124.com.seed.entities.v1alpha.ListEntityMentionsRequest\x1a5.com.seed.entities.v1alpha.ListEntityMentionsResponseB1Z/seed/backend/genproto/entities/v1alpha;entitiesb\x06proto3"

var (
	file_entities_v1alpha_entities_proto_rawDescOnce sync.Once
	file_entities_v1alpha_entities_proto_rawDescData []byte
)

func file_entities_v1alpha_entities_proto_rawDescGZIP() []byte {
	file_entities_v1alpha_entities_proto_rawDescOnce.Do(func() {
		file_entities_v1alpha_entities_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_entities_v1alpha_entities_proto_rawDesc), len(file_entities_v1alpha_entities_proto_rawDesc)))
	})
	return file_entities_v1alpha_entities_proto_rawDescData
}

var file_entities_v1alpha_entities_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_entities_v1alpha_entities_proto_goTypes = []any{
	(*GetChangeRequest)(nil),            // 0: com.seed.entities.v1alpha.GetChangeRequest
	(*GetEntityTimelineRequest)(nil),    // 1: com.seed.entities.v1alpha.GetEntityTimelineRequest
	(*DiscoverEntityRequest)(nil),       // 2: com.seed.entities.v1alpha.DiscoverEntityRequest
	(*DiscoverEntityResponse)(nil),      // 3: com.seed.entities.v1alpha.DiscoverEntityResponse
	(*Change)(nil),                      // 4: com.seed.entities.v1alpha.Change
	(*EntityTimeline)(nil),              // 5: com.seed.entities.v1alpha.EntityTimeline
	(*AuthorVersion)(nil),               // 6: com.seed.entities.v1alpha.AuthorVersion
	(*Entity)(nil),                      // 7: com.seed.entities.v1alpha.Entity
	(*DeletedEntity)(nil),               // 8: com.seed.entities.v1alpha.DeletedEntity
	(*SearchEntitiesRequest)(nil),       // 9: com.seed.entities.v1alpha.SearchEntitiesRequest
	(*SearchEntitiesResponse)(nil),      // 10: com.seed.entities.v1alpha.SearchEntitiesResponse
	(*DeleteEntityRequest)(nil),         // 11: com.seed.entities.v1alpha.DeleteEntityRequest
	(*ListDeletedEntitiesRequest)(nil),  // 12: com.seed.entities.v1alpha.ListDeletedEntitiesRequest
	(*ListDeletedEntitiesResponse)(nil), // 13: com.seed.entities.v1alpha.ListDeletedEntitiesResponse
	(*UndeleteEntityRequest)(nil),       // 14: com.seed.entities.v1alpha.UndeleteEntityRequest
	(*ListEntityMentionsRequest)(nil),   // 15: com.seed.entities.v1alpha.ListEntityMentionsRequest
	(*ListEntityMentionsResponse)(nil),  // 16: com.seed.entities.v1alpha.ListEntityMentionsResponse
	(*Mention)(nil),                     // 17: com.seed.entities.v1alpha.Mention
	nil,                                 // 18: com.seed.entities.v1alpha.EntityTimeline.ChangesEntry
	(*Mention_BlobInfo)(nil),            // 19: com.seed.entities.v1alpha.Mention.BlobInfo
	(*timestamppb.Timestamp)(nil),       // 20: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),               // 21: google.protobuf.Empty
}
var file_entities_v1alpha_entities_proto_depIdxs = []int32{
	20, // 0: com.seed.entities.v1alpha.Change.create_time:type_name -> google.protobuf.Timestamp
	18, // 1: com.seed.entities.v1alpha.EntityTimeline.changes:type_name -> com.seed.entities.v1alpha.EntityTimeline.ChangesEntry
	6,  // 2: com.seed.entities.v1alpha.EntityTimeline.author_versions:type_name -> com.seed.entities.v1alpha.AuthorVersion
	20, // 3: com.seed.entities.v1alpha.AuthorVersion.version_time:type_name -> google.protobuf.Timestamp
	20, // 4: com.seed.entities.v1alpha.DeletedEntity.delete_time:type_name -> google.protobuf.Timestamp
	7,  // 5: com.seed.entities.v1alpha.SearchEntitiesResponse.entities:type_name -> com.seed.entities.v1alpha.Entity
	8,  // 6: com.seed.entities.v1alpha.ListDeletedEntitiesResponse.deleted_entities:type_name -> com.seed.entities.v1alpha.DeletedEntity
	17, // 7: com.seed.entities.v1alpha.ListEntityMentionsResponse.mentions:type_name -> com.seed.entities.v1alpha.Mention
	19, // 8: com.seed.entities.v1alpha.Mention.source_blob:type_name -> com.seed.entities.v1alpha.Mention.BlobInfo
	4,  // 9: com.seed.entities.v1alpha.EntityTimeline.ChangesEntry.value:type_name -> com.seed.entities.v1alpha.Change
	20, // 10: com.seed.entities.v1alpha.Mention.BlobInfo.create_time:type_name -> google.protobuf.Timestamp
	0,  // 11: com.seed.entities.v1alpha.Entities.GetChange:input_type -> com.seed.entities.v1alpha.GetChangeRequest
	1,  // 12: com.seed.entities.v1alpha.Entities.GetEntityTimeline:input_type -> com.seed.entities.v1alpha.GetEntityTimelineRequest
	2,  // 13: com.seed.entities.v1alpha.Entities.DiscoverEntity:input_type -> com.seed.entities.v1alpha.DiscoverEntityRequest
	9,  // 14: com.seed.entities.v1alpha.Entities.SearchEntities:input_type -> com.seed.entities.v1alpha.SearchEntitiesRequest
	11, // 15: com.seed.entities.v1alpha.Entities.DeleteEntity:input_type -> com.seed.entities.v1alpha.DeleteEntityRequest
	12, // 16: com.seed.entities.v1alpha.Entities.ListDeletedEntities:input_type -> com.seed.entities.v1alpha.ListDeletedEntitiesRequest
	14, // 17: com.seed.entities.v1alpha.Entities.UndeleteEntity:input_type -> com.seed.entities.v1alpha.UndeleteEntityRequest
	15, // 18: com.seed.entities.v1alpha.Entities.ListEntityMentions:input_type -> com.seed.entities.v1alpha.ListEntityMentionsRequest
	4,  // 19: com.seed.entities.v1alpha.Entities.GetChange:output_type -> com.seed.entities.v1alpha.Change
	5,  // 20: com.seed.entities.v1alpha.Entities.GetEntityTimeline:output_type -> com.seed.entities.v1alpha.EntityTimeline
	3,  // 21: com.seed.entities.v1alpha.Entities.DiscoverEntity:output_type -> com.seed.entities.v1alpha.DiscoverEntityResponse
	10, // 22: com.seed.entities.v1alpha.Entities.SearchEntities:output_type -> com.seed.entities.v1alpha.SearchEntitiesResponse
	21, // 23: com.seed.entities.v1alpha.Entities.DeleteEntity:output_type -> google.protobuf.Empty
	13, // 24: com.seed.entities.v1alpha.Entities.ListDeletedEntities:output_type -> com.seed.entities.v1alpha.ListDeletedEntitiesResponse
	21, // 25: com.seed.entities.v1alpha.Entities.UndeleteEntity:output_type -> google.protobuf.Empty
	16, // 26: com.seed.entities.v1alpha.Entities.ListEntityMentions:output_type -> com.seed.entities.v1alpha.ListEntityMentionsResponse
	19, // [19:27] is the sub-list for method output_type
	11, // [11:19] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_entities_v1alpha_entities_proto_init() }
func file_entities_v1alpha_entities_proto_init() {
	if File_entities_v1alpha_entities_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_entities_v1alpha_entities_proto_rawDesc), len(file_entities_v1alpha_entities_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_entities_v1alpha_entities_proto_goTypes,
		DependencyIndexes: file_entities_v1alpha_entities_proto_depIdxs,
		MessageInfos:      file_entities_v1alpha_entities_proto_msgTypes,
	}.Build()
	File_entities_v1alpha_entities_proto = out.File
	file_entities_v1alpha_entities_proto_goTypes = nil
	file_entities_v1alpha_entities_proto_depIdxs = nil
}
