// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.24.4
// source: networking/v1alpha/networking.proto

package networking

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Indicates connection status of our node with a remote peer.
// Mimics libp2p connectedness.
type ConnectionStatus int32

const (
	// NotConnected means no connection to peer, and no extra information (default).
	ConnectionStatus_NOT_CONNECTED ConnectionStatus = 0
	// Connected means has an open, live connection to peer.
	ConnectionStatus_CONNECTED ConnectionStatus = 1
	// CanConnect means recently connected to peer, terminated gracefully.
	ConnectionStatus_CAN_CONNECT ConnectionStatus = 2
	// CannotConnect means recently attempted connecting but failed to connect.
	// (should signal "made effort, failed").
	ConnectionStatus_CANNOT_CONNECT ConnectionStatus = 3
	// Limited means we have a transient connection to the peer, but aren't fully connected.
	ConnectionStatus_LIMITED ConnectionStatus = 4
)

// Enum value maps for ConnectionStatus.
var (
	ConnectionStatus_name = map[int32]string{
		0: "NOT_CONNECTED",
		1: "CONNECTED",
		2: "CAN_CONNECT",
		3: "CANNOT_CONNECT",
		4: "LIMITED",
	}
	ConnectionStatus_value = map[string]int32{
		"NOT_CONNECTED":  0,
		"CONNECTED":      1,
		"CAN_CONNECT":    2,
		"CANNOT_CONNECT": 3,
		"LIMITED":        4,
	}
)

func (x ConnectionStatus) Enum() *ConnectionStatus {
	p := new(ConnectionStatus)
	*p = x
	return p
}

func (x ConnectionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_networking_v1alpha_networking_proto_enumTypes[0].Descriptor()
}

func (ConnectionStatus) Type() protoreflect.EnumType {
	return &file_networking_v1alpha_networking_proto_enumTypes[0]
}

func (x ConnectionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectionStatus.Descriptor instead.
func (ConnectionStatus) EnumDescriptor() ([]byte, []int) {
	return file_networking_v1alpha_networking_proto_rawDescGZIP(), []int{0}
}

// Request to get peer's addresses.
type GetPeerInfoRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. CID-encoded Peer ID (a.k.a. Device ID).
	DeviceId      string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPeerInfoRequest) Reset() {
	*x = GetPeerInfoRequest{}
	mi := &file_networking_v1alpha_networking_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPeerInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPeerInfoRequest) ProtoMessage() {}

func (x *GetPeerInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networking_v1alpha_networking_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPeerInfoRequest.ProtoReflect.Descriptor instead.
func (*GetPeerInfoRequest) Descriptor() ([]byte, []int) {
	return file_networking_v1alpha_networking_proto_rawDescGZIP(), []int{0}
}

func (x *GetPeerInfoRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

// Request to get peer's addresses.
type ListPeersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. Number of results per page. Default is defined by the server.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional. Value from next_page_token obtains from a previous response.
	PageToken     string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPeersRequest) Reset() {
	*x = ListPeersRequest{}
	mi := &file_networking_v1alpha_networking_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPeersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPeersRequest) ProtoMessage() {}

func (x *ListPeersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networking_v1alpha_networking_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPeersRequest.ProtoReflect.Descriptor instead.
func (*ListPeersRequest) Descriptor() ([]byte, []int) {
	return file_networking_v1alpha_networking_proto_rawDescGZIP(), []int{1}
}

func (x *ListPeersRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListPeersRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// Various details about a list of peers.
type ListPeersResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of known Hyper Media peers.
	Peers []*PeerInfo `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`
	// Token for the next page if there're more results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPeersResponse) Reset() {
	*x = ListPeersResponse{}
	mi := &file_networking_v1alpha_networking_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPeersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPeersResponse) ProtoMessage() {}

func (x *ListPeersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_networking_v1alpha_networking_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPeersResponse.ProtoReflect.Descriptor instead.
func (*ListPeersResponse) Descriptor() ([]byte, []int) {
	return file_networking_v1alpha_networking_proto_rawDescGZIP(), []int{2}
}

func (x *ListPeersResponse) GetPeers() []*PeerInfo {
	if x != nil {
		return x.Peers
	}
	return nil
}

func (x *ListPeersResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// Request for connecting to a peer explicitly.
type ConnectRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of multiaddrs for the same peer ID to attempt p2p connection.
	// For example `/ip4/10.0.0.1/tcp/55000/p2p/QmDeadBeef`.
	Addrs         []string `protobuf:"bytes,1,rep,name=addrs,proto3" json:"addrs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	mi := &file_networking_v1alpha_networking_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networking_v1alpha_networking_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_networking_v1alpha_networking_proto_rawDescGZIP(), []int{3}
}

func (x *ConnectRequest) GetAddrs() []string {
	if x != nil {
		return x.Addrs
	}
	return nil
}

// Response for conneting to a peer.
type ConnectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectResponse) Reset() {
	*x = ConnectResponse{}
	mi := &file_networking_v1alpha_networking_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectResponse) ProtoMessage() {}

func (x *ConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_networking_v1alpha_networking_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectResponse.ProtoReflect.Descriptor instead.
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return file_networking_v1alpha_networking_proto_rawDescGZIP(), []int{4}
}

// Various details about a known peer.
type PeerInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Libp2p peer ID.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Account ID that this peer is bound to.
	AccountId string `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// List of known multiaddrs of the request peer.
	Addrs []string `protobuf:"bytes,3,rep,name=addrs,proto3" json:"addrs,omitempty"`
	// Connection status of our node with a remote peer.
	ConnectionStatus ConnectionStatus `protobuf:"varint,4,opt,name=connection_status,json=connectionStatus,proto3,enum=com.seed.networking.v1alpha.ConnectionStatus" json:"connection_status,omitempty"`
	// Whether this peer was a direct connection or someone else shared it with us.
	IsDirect bool `protobuf:"varint,5,opt,name=is_direct,json=isDirect,proto3" json:"is_direct,omitempty"`
	// When we first inserted that peer in the database.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// When the peer updated its addresses for the last time.
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Seed protocol version the peer talks.
	Protocol      string `protobuf:"bytes,9,opt,name=protocol,proto3" json:"protocol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeerInfo) Reset() {
	*x = PeerInfo{}
	mi := &file_networking_v1alpha_networking_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerInfo) ProtoMessage() {}

func (x *PeerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_networking_v1alpha_networking_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerInfo.ProtoReflect.Descriptor instead.
func (*PeerInfo) Descriptor() ([]byte, []int) {
	return file_networking_v1alpha_networking_proto_rawDescGZIP(), []int{5}
}

func (x *PeerInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PeerInfo) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *PeerInfo) GetAddrs() []string {
	if x != nil {
		return x.Addrs
	}
	return nil
}

func (x *PeerInfo) GetConnectionStatus() ConnectionStatus {
	if x != nil {
		return x.ConnectionStatus
	}
	return ConnectionStatus_NOT_CONNECTED
}

func (x *PeerInfo) GetIsDirect() bool {
	if x != nil {
		return x.IsDirect
	}
	return false
}

func (x *PeerInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PeerInfo) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *PeerInfo) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

var File_networking_v1alpha_networking_proto protoreflect.FileDescriptor

const file_networking_v1alpha_networking_proto_rawDesc = "" +
	"\n" +
	"#networking/v1alpha/networking.proto\x12\x1bcom.seed.networking.v1alpha\x1a\x1fgoogle/protobuf/timestamp.proto\"1\n" +
	"\x12GetPeerInfoRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\"N\n" +
	"\x10ListPeersRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\"x\n" +
	"\x11ListPeersResponse\x12;\n" +
	"\x05peers\x18\x01 \x03(\v2%.com.seed.networking.v1alpha.PeerInfoR\x05peers\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"&\n" +
	"\x0eConnectRequest\x12\x14\n" +
	"\x05addrs\x18\x01 \x03(\tR\x05addrs\"\x11\n" +
	"\x0fConnectResponse\"\xda\x02\n" +
	"\bPeerInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x14\n" +
	"\x05addrs\x18\x03 \x03(\tR\x05addrs\x12Z\n" +
	"\x11connection_status\x18\x04 \x01(\x0e2-.com.seed.networking.v1alpha.ConnectionStatusR\x10connectionStatus\x12\x1b\n" +
	"\tis_direct\x18\x05 \x01(\bR\bisDirect\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x1a\n" +
	"\bprotocol\x18\t \x01(\tR\bprotocol*f\n" +
	"\x10ConnectionStatus\x12\x11\n" +
	"\rNOT_CONNECTED\x10\x00\x12\r\n" +
	"\tCONNECTED\x10\x01\x12\x0f\n" +
	"\vCAN_CONNECT\x10\x02\x12\x12\n" +
	"\x0eCANNOT_CONNECT\x10\x03\x12\v\n" +
	"\aLIMITED\x10\x042\xc5\x02\n" +
	"\n" +
	"Networking\x12e\n" +
	"\vGetPeerInfo\x12/.com.seed.networking.v1alpha.GetPeerInfoRequest\x1a%.com.seed.networking.v1alpha.PeerInfo\x12j\n" +
	"\tListPeers\x12-.com.seed.networking.v1alpha.ListPeersRequest\x1a..com.seed.networking.v1alpha.ListPeersResponse\x12d\n" +
	"\aConnect\x12+.com.seed.networking.v1alpha.ConnectRequest\x1a,.com.seed.networking.v1alpha.ConnectResponseB5Z3seed/backend/genproto/networking/v1alpha;networkingb\x06proto3"

var (
	file_networking_v1alpha_networking_proto_rawDescOnce sync.Once
	file_networking_v1alpha_networking_proto_rawDescData []byte
)

func file_networking_v1alpha_networking_proto_rawDescGZIP() []byte {
	file_networking_v1alpha_networking_proto_rawDescOnce.Do(func() {
		file_networking_v1alpha_networking_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_networking_v1alpha_networking_proto_rawDesc), len(file_networking_v1alpha_networking_proto_rawDesc)))
	})
	return file_networking_v1alpha_networking_proto_rawDescData
}

var file_networking_v1alpha_networking_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_networking_v1alpha_networking_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_networking_v1alpha_networking_proto_goTypes = []any{
	(ConnectionStatus)(0),         // 0: com.seed.networking.v1alpha.ConnectionStatus
	(*GetPeerInfoRequest)(nil),    // 1: com.seed.networking.v1alpha.GetPeerInfoRequest
	(*ListPeersRequest)(nil),      // 2: com.seed.networking.v1alpha.ListPeersRequest
	(*ListPeersResponse)(nil),     // 3: com.seed.networking.v1alpha.ListPeersResponse
	(*ConnectRequest)(nil),        // 4: com.seed.networking.v1alpha.ConnectRequest
	(*ConnectResponse)(nil),       // 5: com.seed.networking.v1alpha.ConnectResponse
	(*PeerInfo)(nil),              // 6: com.seed.networking.v1alpha.PeerInfo
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
}
var file_networking_v1alpha_networking_proto_depIdxs = []int32{
	6, // 0: com.seed.networking.v1alpha.ListPeersResponse.peers:type_name -> com.seed.networking.v1alpha.PeerInfo
	0, // 1: com.seed.networking.v1alpha.PeerInfo.connection_status:type_name -> com.seed.networking.v1alpha.ConnectionStatus
	7, // 2: com.seed.networking.v1alpha.PeerInfo.created_at:type_name -> google.protobuf.Timestamp
	7, // 3: com.seed.networking.v1alpha.PeerInfo.updated_at:type_name -> google.protobuf.Timestamp
	1, // 4: com.seed.networking.v1alpha.Networking.GetPeerInfo:input_type -> com.seed.networking.v1alpha.GetPeerInfoRequest
	2, // 5: com.seed.networking.v1alpha.Networking.ListPeers:input_type -> com.seed.networking.v1alpha.ListPeersRequest
	4, // 6: com.seed.networking.v1alpha.Networking.Connect:input_type -> com.seed.networking.v1alpha.ConnectRequest
	6, // 7: com.seed.networking.v1alpha.Networking.GetPeerInfo:output_type -> com.seed.networking.v1alpha.PeerInfo
	3, // 8: com.seed.networking.v1alpha.Networking.ListPeers:output_type -> com.seed.networking.v1alpha.ListPeersResponse
	5, // 9: com.seed.networking.v1alpha.Networking.Connect:output_type -> com.seed.networking.v1alpha.ConnectResponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_networking_v1alpha_networking_proto_init() }
func file_networking_v1alpha_networking_proto_init() {
	if File_networking_v1alpha_networking_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_networking_v1alpha_networking_proto_rawDesc), len(file_networking_v1alpha_networking_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_networking_v1alpha_networking_proto_goTypes,
		DependencyIndexes: file_networking_v1alpha_networking_proto_depIdxs,
		EnumInfos:         file_networking_v1alpha_networking_proto_enumTypes,
		MessageInfos:      file_networking_v1alpha_networking_proto_msgTypes,
	}.Build()
	File_networking_v1alpha_networking_proto = out.File
	file_networking_v1alpha_networking_proto_goTypes = nil
	file_networking_v1alpha_networking_proto_depIdxs = nil
}
