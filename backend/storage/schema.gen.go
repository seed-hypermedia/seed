// Code generated by sqlitegen. DO NOT EDIT.

package storage

import (
	"seed/backend/util/sqlitegen"
)

// Table blob_links.
const (
	BlobLinks       sqlitegen.Table  = "blob_links"
	BlobLinksSource sqlitegen.Column = "blob_links.source"
	BlobLinksTarget sqlitegen.Column = "blob_links.target"
	BlobLinksType   sqlitegen.Column = "blob_links.type"
)

// Table blob_links. Plain strings.
const (
	T_BlobLinks       = "blob_links"
	C_BlobLinksSource = "blob_links.source"
	C_BlobLinksTarget = "blob_links.target"
	C_BlobLinksType   = "blob_links.type"
)

// Table blobs.
const (
	Blobs           sqlitegen.Table  = "blobs"
	BlobsCodec      sqlitegen.Column = "blobs.codec"
	BlobsData       sqlitegen.Column = "blobs.data"
	BlobsID         sqlitegen.Column = "blobs.id"
	BlobsInsertTime sqlitegen.Column = "blobs.insert_time"
	BlobsMultihash  sqlitegen.Column = "blobs.multihash"
	BlobsSize       sqlitegen.Column = "blobs.size"
)

// Table blobs. Plain strings.
const (
	T_Blobs           = "blobs"
	C_BlobsCodec      = "blobs.codec"
	C_BlobsData       = "blobs.data"
	C_BlobsID         = "blobs.id"
	C_BlobsInsertTime = "blobs.insert_time"
	C_BlobsMultihash  = "blobs.multihash"
	C_BlobsSize       = "blobs.size"
)

// Table deleted_resources.
const (
	DeletedResources           sqlitegen.Table  = "deleted_resources"
	DeletedResourcesDeleteTime sqlitegen.Column = "deleted_resources.delete_time"
	DeletedResourcesExtraAttrs sqlitegen.Column = "deleted_resources.extra_attrs"
	DeletedResourcesIRI        sqlitegen.Column = "deleted_resources.iri"
	DeletedResourcesReason     sqlitegen.Column = "deleted_resources.reason"
)

// Table deleted_resources. Plain strings.
const (
	T_DeletedResources           = "deleted_resources"
	C_DeletedResourcesDeleteTime = "deleted_resources.delete_time"
	C_DeletedResourcesExtraAttrs = "deleted_resources.extra_attrs"
	C_DeletedResourcesIRI        = "deleted_resources.iri"
	C_DeletedResourcesReason     = "deleted_resources.reason"
)

// Table kv.
const (
	KV      sqlitegen.Table  = "kv"
	KVKey   sqlitegen.Column = "kv.key"
	KVValue sqlitegen.Column = "kv.value"
)

// Table kv. Plain strings.
const (
	T_KV      = "kv"
	C_KVKey   = "kv.key"
	C_KVValue = "kv.value"
)

// Table meta_view.
const (
	MetaView           sqlitegen.Table  = "meta_view"
	MetaViewExtraAttrs sqlitegen.Column = "meta_view.extra_attrs"
	MetaViewIRI        sqlitegen.Column = "meta_view.iri"
	MetaViewPrincipal  sqlitegen.Column = "meta_view.principal"
)

// Table meta_view. Plain strings.
const (
	T_MetaView           = "meta_view"
	C_MetaViewExtraAttrs = "meta_view.extra_attrs"
	C_MetaViewIRI        = "meta_view.iri"
	C_MetaViewPrincipal  = "meta_view.principal"
)

// Table peers.
const (
	Peers          sqlitegen.Table  = "peers"
	PeersAddresses sqlitegen.Column = "peers.addresses"
	PeersID        sqlitegen.Column = "peers.id"
	PeersPid       sqlitegen.Column = "peers.pid"
)

// Table peers. Plain strings.
const (
	T_Peers          = "peers"
	C_PeersAddresses = "peers.addresses"
	C_PeersID        = "peers.id"
	C_PeersPid       = "peers.pid"
)

// Table public_keys.
const (
	PublicKeys          sqlitegen.Table  = "public_keys"
	PublicKeysID        sqlitegen.Column = "public_keys.id"
	PublicKeysPrincipal sqlitegen.Column = "public_keys.principal"
)

// Table public_keys. Plain strings.
const (
	T_PublicKeys          = "public_keys"
	C_PublicKeysID        = "public_keys.id"
	C_PublicKeysPrincipal = "public_keys.principal"
)

// Table resource_heads.
const (
	ResourceHeads           sqlitegen.Table  = "resource_heads"
	ResourceHeadsAuthor     sqlitegen.Column = "resource_heads.author"
	ResourceHeadsHeads      sqlitegen.Column = "resource_heads.heads"
	ResourceHeadsResource   sqlitegen.Column = "resource_heads.resource"
	ResourceHeadsSourceBlob sqlitegen.Column = "resource_heads.source_blob"
	ResourceHeadsTs         sqlitegen.Column = "resource_heads.ts"
)

// Table resource_heads. Plain strings.
const (
	T_ResourceHeads           = "resource_heads"
	C_ResourceHeadsAuthor     = "resource_heads.author"
	C_ResourceHeadsHeads      = "resource_heads.heads"
	C_ResourceHeadsResource   = "resource_heads.resource"
	C_ResourceHeadsSourceBlob = "resource_heads.source_blob"
	C_ResourceHeadsTs         = "resource_heads.ts"
)

// Table resource_links.
const (
	ResourceLinks           sqlitegen.Table  = "resource_links"
	ResourceLinksExtraAttrs sqlitegen.Column = "resource_links.extra_attrs"
	ResourceLinksID         sqlitegen.Column = "resource_links.id"
	ResourceLinksIsPinned   sqlitegen.Column = "resource_links.is_pinned"
	ResourceLinksSource     sqlitegen.Column = "resource_links.source"
	ResourceLinksTarget     sqlitegen.Column = "resource_links.target"
	ResourceLinksType       sqlitegen.Column = "resource_links.type"
)

// Table resource_links. Plain strings.
const (
	T_ResourceLinks           = "resource_links"
	C_ResourceLinksExtraAttrs = "resource_links.extra_attrs"
	C_ResourceLinksID         = "resource_links.id"
	C_ResourceLinksIsPinned   = "resource_links.is_pinned"
	C_ResourceLinksSource     = "resource_links.source"
	C_ResourceLinksTarget     = "resource_links.target"
	C_ResourceLinksType       = "resource_links.type"
)

// Table resources.
const (
	Resources            sqlitegen.Table  = "resources"
	ResourcesCreateTime  sqlitegen.Column = "resources.create_time"
	ResourcesGenesisBlob sqlitegen.Column = "resources.genesis_blob"
	ResourcesID          sqlitegen.Column = "resources.id"
	ResourcesIRI         sqlitegen.Column = "resources.iri"
	ResourcesOwner       sqlitegen.Column = "resources.owner"
)

// Table resources. Plain strings.
const (
	T_Resources            = "resources"
	C_ResourcesCreateTime  = "resources.create_time"
	C_ResourcesGenesisBlob = "resources.genesis_blob"
	C_ResourcesID          = "resources.id"
	C_ResourcesIRI         = "resources.iri"
	C_ResourcesOwner       = "resources.owner"
)

// Table sqlite_sequence.
const (
	SQLiteSequence     sqlitegen.Table  = "sqlite_sequence"
	SQLiteSequenceName sqlitegen.Column = "sqlite_sequence.name"
	SQLiteSequenceSeq  sqlitegen.Column = "sqlite_sequence.seq"
)

// Table sqlite_sequence. Plain strings.
const (
	T_SQLiteSequence     = "sqlite_sequence"
	C_SQLiteSequenceName = "sqlite_sequence.name"
	C_SQLiteSequenceSeq  = "sqlite_sequence.seq"
)

// Table structural_blobs.
const (
	StructuralBlobs            sqlitegen.Table  = "structural_blobs"
	StructuralBlobsAuthor      sqlitegen.Column = "structural_blobs.author"
	StructuralBlobsExtraAttrs  sqlitegen.Column = "structural_blobs.extra_attrs"
	StructuralBlobsGenesisBlob sqlitegen.Column = "structural_blobs.genesis_blob"
	StructuralBlobsID          sqlitegen.Column = "structural_blobs.id"
	StructuralBlobsResource    sqlitegen.Column = "structural_blobs.resource"
	StructuralBlobsTs          sqlitegen.Column = "structural_blobs.ts"
	StructuralBlobsType        sqlitegen.Column = "structural_blobs.type"
)

// Table structural_blobs. Plain strings.
const (
	T_StructuralBlobs            = "structural_blobs"
	C_StructuralBlobsAuthor      = "structural_blobs.author"
	C_StructuralBlobsExtraAttrs  = "structural_blobs.extra_attrs"
	C_StructuralBlobsGenesisBlob = "structural_blobs.genesis_blob"
	C_StructuralBlobsID          = "structural_blobs.id"
	C_StructuralBlobsResource    = "structural_blobs.resource"
	C_StructuralBlobsTs          = "structural_blobs.ts"
	C_StructuralBlobsType        = "structural_blobs.type"
)

// Table subscriptions.
const (
	Subscriptions            sqlitegen.Table  = "subscriptions"
	SubscriptionsID          sqlitegen.Column = "subscriptions.id"
	SubscriptionsInsertTime  sqlitegen.Column = "subscriptions.insert_time"
	SubscriptionsIRI         sqlitegen.Column = "subscriptions.iri"
	SubscriptionsIsRecursive sqlitegen.Column = "subscriptions.is_recursive"
)

// Table subscriptions. Plain strings.
const (
	T_Subscriptions            = "subscriptions"
	C_SubscriptionsID          = "subscriptions.id"
	C_SubscriptionsInsertTime  = "subscriptions.insert_time"
	C_SubscriptionsIRI         = "subscriptions.iri"
	C_SubscriptionsIsRecursive = "subscriptions.is_recursive"
)

// Table wallets.
const (
	Wallets         sqlitegen.Table  = "wallets"
	WalletsAddress  sqlitegen.Column = "wallets.address"
	WalletsBalance  sqlitegen.Column = "wallets.balance"
	WalletsID       sqlitegen.Column = "wallets.id"
	WalletsLogin    sqlitegen.Column = "wallets.login"
	WalletsName     sqlitegen.Column = "wallets.name"
	WalletsPassword sqlitegen.Column = "wallets.password"
	WalletsToken    sqlitegen.Column = "wallets.token"
	WalletsType     sqlitegen.Column = "wallets.type"
)

// Table wallets. Plain strings.
const (
	T_Wallets         = "wallets"
	C_WalletsAddress  = "wallets.address"
	C_WalletsBalance  = "wallets.balance"
	C_WalletsID       = "wallets.id"
	C_WalletsLogin    = "wallets.login"
	C_WalletsName     = "wallets.name"
	C_WalletsPassword = "wallets.password"
	C_WalletsToken    = "wallets.token"
	C_WalletsType     = "wallets.type"
)

// Schema describes SQLite columns.
var Schema = sqlitegen.Schema{
	Columns: map[sqlitegen.Column]sqlitegen.ColumnInfo{
		BlobLinksSource:            {Table: BlobLinks, SQLType: "INTEGER"},
		BlobLinksTarget:            {Table: BlobLinks, SQLType: "INTEGER"},
		BlobLinksType:              {Table: BlobLinks, SQLType: "TEXT"},
		BlobsCodec:                 {Table: Blobs, SQLType: "INTEGER"},
		BlobsData:                  {Table: Blobs, SQLType: "BLOB"},
		BlobsID:                    {Table: Blobs, SQLType: "INTEGER"},
		BlobsInsertTime:            {Table: Blobs, SQLType: "INTEGER"},
		BlobsMultihash:             {Table: Blobs, SQLType: "BLOB"},
		BlobsSize:                  {Table: Blobs, SQLType: "INTEGER"},
		DeletedResourcesDeleteTime: {Table: DeletedResources, SQLType: "INTEGER"},
		DeletedResourcesExtraAttrs: {Table: DeletedResources, SQLType: "JSONB"},
		DeletedResourcesIRI:        {Table: DeletedResources, SQLType: "TEXT"},
		DeletedResourcesReason:     {Table: DeletedResources, SQLType: "TEXT"},
		KVKey:                      {Table: KV, SQLType: "TEXT"},
		KVValue:                    {Table: KV, SQLType: "TEXT"},
		MetaViewExtraAttrs:         {Table: MetaView, SQLType: "JSONB"},
		MetaViewIRI:                {Table: MetaView, SQLType: "TEXT"},
		MetaViewPrincipal:          {Table: MetaView, SQLType: "BLOB"},
		PeersAddresses:             {Table: Peers, SQLType: "TEXT"},
		PeersID:                    {Table: Peers, SQLType: "INTEGER"},
		PeersPid:                   {Table: Peers, SQLType: "TEXT"},
		PublicKeysID:               {Table: PublicKeys, SQLType: "INTEGER"},
		PublicKeysPrincipal:        {Table: PublicKeys, SQLType: "BLOB"},
		ResourceHeadsAuthor:        {Table: ResourceHeads, SQLType: "INTEGER"},
		ResourceHeadsHeads:         {Table: ResourceHeads, SQLType: "JSONB"},
		ResourceHeadsResource:      {Table: ResourceHeads, SQLType: "INTEGER"},
		ResourceHeadsSourceBlob:    {Table: ResourceHeads, SQLType: "INTEGER"},
		ResourceHeadsTs:            {Table: ResourceHeads, SQLType: "INTEGER"},
		ResourceLinksExtraAttrs:    {Table: ResourceLinks, SQLType: "JSONB"},
		ResourceLinksID:            {Table: ResourceLinks, SQLType: "INTEGER"},
		ResourceLinksIsPinned:      {Table: ResourceLinks, SQLType: "INTEGER"},
		ResourceLinksSource:        {Table: ResourceLinks, SQLType: "INTEGER"},
		ResourceLinksTarget:        {Table: ResourceLinks, SQLType: "INTEGER"},
		ResourceLinksType:          {Table: ResourceLinks, SQLType: "TEXT"},
		ResourcesCreateTime:        {Table: Resources, SQLType: "INTEGER"},
		ResourcesGenesisBlob:       {Table: Resources, SQLType: "INTEGER"},
		ResourcesID:                {Table: Resources, SQLType: "INTEGER"},
		ResourcesIRI:               {Table: Resources, SQLType: "TEXT"},
		ResourcesOwner:             {Table: Resources, SQLType: "INTEGER"},
		SQLiteSequenceName:         {Table: SQLiteSequence, SQLType: ""},
		SQLiteSequenceSeq:          {Table: SQLiteSequence, SQLType: ""},
		StructuralBlobsAuthor:      {Table: StructuralBlobs, SQLType: "INTEGER"},
		StructuralBlobsExtraAttrs:  {Table: StructuralBlobs, SQLType: "JSONB"},
		StructuralBlobsGenesisBlob: {Table: StructuralBlobs, SQLType: "INTEGER"},
		StructuralBlobsID:          {Table: StructuralBlobs, SQLType: "INTEGER"},
		StructuralBlobsResource:    {Table: StructuralBlobs, SQLType: "INTEGER"},
		StructuralBlobsTs:          {Table: StructuralBlobs, SQLType: "INTEGER"},
		StructuralBlobsType:        {Table: StructuralBlobs, SQLType: "TEXT"},
		SubscriptionsID:            {Table: Subscriptions, SQLType: "INTEGER"},
		SubscriptionsInsertTime:    {Table: Subscriptions, SQLType: "INTEGER"},
		SubscriptionsIRI:           {Table: Subscriptions, SQLType: "INTEGER"},
		SubscriptionsIsRecursive:   {Table: Subscriptions, SQLType: "BOOLEAN"},
		WalletsAddress:             {Table: Wallets, SQLType: "TEXT"},
		WalletsBalance:             {Table: Wallets, SQLType: "INTEGER"},
		WalletsID:                  {Table: Wallets, SQLType: "TEXT"},
		WalletsLogin:               {Table: Wallets, SQLType: "BLOB"},
		WalletsName:                {Table: Wallets, SQLType: "TEXT"},
		WalletsPassword:            {Table: Wallets, SQLType: "BLOB"},
		WalletsToken:               {Table: Wallets, SQLType: "BLOB"},
		WalletsType:                {Table: Wallets, SQLType: "TEXT"},
	},
}
